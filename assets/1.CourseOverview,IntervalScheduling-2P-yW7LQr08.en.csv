text,start,stop
"The following content is
provided under a Creative",00:00:00.060,00:00:02.500
Commons license.,00:00:02.500,00:00:04.019
"Your support will help
MIT OpenCourseWare",00:00:04.019,00:00:06.360
"continue to offer high quality
educational resources for free.",00:00:06.360,00:00:10.730
"To make a donation or
view additional materials",00:00:10.730,00:00:13.330
"from hundreds of MIT courses,
visit MIT OpenCourseWare",00:00:13.330,00:00:17.236
at ocw.mit.edu.,00:00:17.236,00:00:17.861
"SRINIVAS DEVADAS:
So welcome to 6046.",00:00:21.720,00:00:24.930
My name is Srinivas Devadas.,00:00:24.930,00:00:27.010
"I'm a professor of
computer science.",00:00:27.010,00:00:30.240
This is my 27th year at MIT.,00:00:30.240,00:00:33.650
"I'm teaching this class
with great course staff,",00:00:33.650,00:00:37.740
"with co-lecturers,
Eric Demaine over here",00:00:37.740,00:00:42.010
"and Nancy Lynch,
who's over there,",00:00:42.010,00:00:45.750
"and a whole bunch of TAs, who
you will meet through the term.",00:00:45.750,00:00:50.250
"We just signed up our last TA
yesterday, so at this point,",00:00:50.250,00:00:55.620
even I don't know their names.,00:00:55.620,00:00:58.230
"But we hope to have
a great semester.",00:00:58.230,00:01:01.840
"I'm very excited to be teaching
this class with Eric and Nancy.",00:01:01.840,00:01:05.470
"I recognize some of you folks
from 006 from a year ago,",00:01:05.470,00:01:09.830
"so hello again, and
from other classes.",00:01:09.830,00:01:13.450
And so let's get started.,00:01:13.450,00:01:16.600
I mentioned 006.,00:01:16.600,00:01:18.310
"006 is a prerequisite
for this class,",00:01:18.310,00:01:21.730
"so if by chance you've
skipped a class--",00:01:21.730,00:01:26.030
"MIT or EECS has allowed
you to skip that--",00:01:26.030,00:01:29.490
"make sure you check in with
us to see that you are ready",00:01:29.490,00:01:34.440
"for 6046 because we will
assume that you know the 6006",00:01:34.440,00:01:39.633
material.,00:01:39.633,00:01:40.340
"And by that, I
mean basic material",00:01:40.340,00:01:42.950
"on that data structures,
classical algorithms",00:01:42.950,00:01:46.290
"like sorting, algorithms
for dynamic programming,",00:01:46.290,00:01:52.930
"or algorithms that use dynamic
programming I should say,",00:01:52.930,00:01:56.750
"algorithms for shortest
paths, et cetera.",00:01:56.750,00:02:00.580
"6046 itself, we're
going to run this course",00:02:00.580,00:02:04.550
"pretty much off the Stellar
website in the sense",00:02:04.550,00:02:08.039
"that that'll be our one-stop
shop for getting everything",00:02:08.039,00:02:12.550
"including lecture handouts,
problem sets-- turning",00:02:12.550,00:02:16.490
"in your problem sets, et cetera.",00:02:16.490,00:02:19.590
"And I should mention
that this course is",00:02:19.590,00:02:22.800
"being taped for
OpenCourseWare, and while it'll",00:02:22.800,00:02:27.290
"take a little bit of time for
the videos to be put online,",00:02:27.290,00:02:32.750
"we hope to do that perhaps
in clumps before the quizzes",00:02:32.750,00:02:39.370
"that you will have as we
have to have in our class.",00:02:39.370,00:02:46.020
"So let me just say a couple
more things about logistics,",00:02:46.020,00:02:49.940
"and then we get started
with technical content.",00:02:49.940,00:02:53.580
"As I mentioned, we're
going to be running",00:02:53.580,00:02:55.610
this course off Stellar.,00:02:55.610,00:02:57.610
"Please sign up for
recitations section",00:02:57.610,00:03:00.610
"by going to the stellar website
and choosing a section that",00:03:00.610,00:03:04.390
works for your schedule.,00:03:04.390,00:03:06.270
"Sections go from 10:00 AM
all the way to 3:00 I think,",00:03:06.270,00:03:11.580
"and we've placed a limit on the
number of students per section.",00:03:11.580,00:03:17.390
"We wanted the sections
to be manageable in size,",00:03:17.390,00:03:20.140
"but there's plenty of
room for everybody,",00:03:20.140,00:03:22.600
"and the schedule
flexibility should",00:03:22.600,00:03:24.950
"allows you to choose a
section pretty easily.",00:03:24.950,00:03:29.820
"We have a course information
document and an objectives",00:03:29.820,00:03:32.310
document on the website.,00:03:32.310,00:03:34.270
"That has a lot of details
on the grading policy,",00:03:34.270,00:03:37.460
"the collaboration
policy, et cetera.",00:03:37.460,00:03:40.260
"Please read it very
carefully from the first page",00:03:40.260,00:03:44.700
all the way to the end.,00:03:44.700,00:03:46.230
"And I will mention
one thing that you",00:03:46.230,00:03:48.530
"should be careful about, which
is that while problem sets are",00:03:48.530,00:03:55.650
"only 30% of the
grade, we do require",00:03:55.650,00:03:59.380
you to attempt the problems.,00:03:59.380,00:04:02.180
"And there's actually
a penalty associated",00:04:02.180,00:04:04.120
"with not attempting problems and
not tuning problem sets in that",00:04:04.120,00:04:07.940
"is way more than 30%,
so keep that in mind,",00:04:07.940,00:04:11.390
"and please read the
collaboration policy",00:04:11.390,00:04:14.470
"as well as the grading
policy, carefully.",00:04:14.470,00:04:17.130
"And feel free to
ask us questions.",00:04:17.130,00:04:19.740
"You can ask us questions
anonymously through Piazza,",00:04:19.740,00:04:23.600
"or you can certainly
send us email.",00:04:23.600,00:04:25.520
"All the information
is on Stellar.",00:04:25.520,00:04:27.930
"So that's all I really had to
say about course logistics.",00:04:27.930,00:04:32.960
"Let me tell you a
little bit about how",00:04:32.960,00:04:35.830
"the content of this
course is structured.",00:04:35.830,00:04:37.800
"We have several modules,
and Eric, Nancy,",00:04:40.410,00:04:44.900
"and I will be in charge of
each of these different modules",00:04:44.900,00:04:49.810
as the term goes.,00:04:49.810,00:04:51.670
"Our very first module is going
to start really next time.",00:04:51.670,00:04:58.070
"Today is really an
overview lecture.",00:04:58.070,00:05:00.400
"But it's a module on
divide and conquer,",00:05:00.400,00:05:02.890
"and you learned about this
divide and conquer paradigm",00:05:02.890,00:05:06.970
in 006 or equivalent classes.,00:05:06.970,00:05:09.670
"It's breaking of a problem
into smaller problems",00:05:09.670,00:05:12.350
and getting efficiency that way.,00:05:12.350,00:05:14.690
"Merge sort is a
classic algorithm",00:05:14.690,00:05:16.780
"that follows the divide
and conquer paradigm.",00:05:16.780,00:05:19.600
"If you're going to
take it to a new level.",00:05:19.600,00:05:22.180
"And I guess that's sort
of the team of 046.",00:05:22.180,00:05:25.190
"Take the material in 006 and
raise the stakes a little bit--",00:05:25.190,00:05:28.920
"raise the level of
sophistication--",00:05:28.920,00:05:31.030
"and you'll see things like
fast Fourier transform.",00:05:31.030,00:05:34.880
"Finding an algorithm
for a convex hull,",00:05:34.880,00:05:37.310
we'll do that next time.,00:05:37.310,00:05:38.770
"That uses the divide
and conquer paradigm.",00:05:38.770,00:05:42.010
"We're going to do a
ton of optimization.",00:05:42.010,00:05:44.670
"Divide and conquer can
obviously be used for search",00:05:44.670,00:05:48.790
and also for optimization.,00:05:48.790,00:05:51.060
"In particular, we'll look
at strategies corresponding",00:05:51.060,00:05:56.580
"to greedy algorithms, Dijkstra,
which hopefully you remember",00:05:56.580,00:06:02.050
"the shortest path algorithm from
006 is an example of a greedy",00:06:02.050,00:06:07.480
algorithm.,00:06:07.480,00:06:08.370
"We'll see a bunch
of other examples,",00:06:08.370,00:06:11.360
and we'll look at one today.,00:06:11.360,00:06:13.260
"And dynamic programming, it's
a wonderful algorithmic hammer",00:06:13.260,00:06:19.770
"that you can apply to a
wide variety of problems,",00:06:19.770,00:06:22.730
"certainly to shortest
paths as well.",00:06:22.730,00:06:25.250
"We'll look at it in
many different contexts.",00:06:25.250,00:06:27.700
"And then really
quickly network flow,",00:06:27.700,00:06:33.580
"which is a problem that's
associated with-- here's",00:06:33.580,00:06:36.490
a network.,00:06:36.490,00:06:37.480
"This capacity is associated
with the network.",00:06:37.480,00:06:40.620
"The capacities could
respond to the width",00:06:40.620,00:06:44.010
"of the roads in a highway
system or the number",00:06:44.010,00:06:48.880
"of lanes, the amount of
traffic that can go through.",00:06:48.880,00:06:52.170
"How do I maximize the
set of commodities,",00:06:52.170,00:06:56.230
"or the amount of
commodities that I",00:06:56.230,00:06:58.140
can push through the network?,00:06:58.140,00:06:59.730
"That it turns out is,
again, a problem that",00:06:59.730,00:07:06.320
"has many different
applications, so it's really",00:07:06.320,00:07:08.410
a collection of problems.,00:07:08.410,00:07:10.606
"You're going to spend
some time, a little bit",00:07:10.606,00:07:12.480
"today, but a little
more than in 6006,",00:07:12.480,00:07:17.170
talking about intractability.,00:07:17.170,00:07:19.670
"So a lot of algorithms that
we're going to talk about",00:07:19.670,00:07:22.115
"are efficient in the
sense that they're",00:07:22.115,00:07:25.080
polynomial time solvable.,00:07:25.080,00:07:27.160
"And first, polynomial
time solvable",00:07:27.160,00:07:31.560
"doesn't imply efficiency
in the practical sense,",00:07:31.560,00:07:35.801
"so if you have an n
raised to 8 algorithm,",00:07:35.801,00:07:37.550
it's polynomial time.,00:07:37.550,00:07:38.930
"But really, it's not something
that you can use on real world",00:07:38.930,00:07:42.250
"problems where n is
relatively large,",00:07:42.250,00:07:45.220
"but generally in a theoretical
computer science class,",00:07:45.220,00:07:49.700
"we'll think about
tractable problems",00:07:49.700,00:07:52.100
"as being those that have
polynomial time algorithms that",00:07:52.100,00:07:57.320
"can solve them
exactly or optimally.",00:07:57.320,00:08:00.270
"But intractability then
corresponds to problems",00:08:00.270,00:08:04.690
"that, at the moment, we don't
know of a polynomial time",00:08:04.690,00:08:08.850
"algorithm to solve them,
and the best algorithms",00:08:08.850,00:08:11.510
"we have take worst
case exponential time.",00:08:11.510,00:08:14.340
"And so the question is, what
happens with those problems?",00:08:14.340,00:08:17.740
"And we'll look at things
like approximation algorithms",00:08:17.740,00:08:21.360
"that can get us, in the case
of optimization problems,",00:08:21.360,00:08:28.740
"get us to within a certain
fraction of optimal,",00:08:28.740,00:08:32.929
"guaranteed, and run
in polynomial time.",00:08:32.929,00:08:36.260
"So you can't get
the absolute best,",00:08:36.260,00:08:38.750
"but you can get within 10% or
we can get within a factor of 2.",00:08:38.750,00:08:42.470
"That may be enough for
a particular instance",00:08:42.470,00:08:46.450
"of a problem or a set of
instances of a problem.",00:08:46.450,00:08:49.660
"And what we do a bunch
of advanced topics.",00:08:49.660,00:08:53.000
"I think we have distributed
algorithms plan.",00:08:53.000,00:08:56.050
"Nancy works in that
area, and we'll also",00:08:56.050,00:09:01.450
talk about cryptography.,00:09:01.450,00:09:03.380
"There's a deep connection
between number theory",00:09:03.380,00:09:06.820
"algorithms and cryptography
that towards end of the lecture,",00:09:06.820,00:09:11.190
"or, I should say, towards
the end of the course,",00:09:11.190,00:09:13.340
"I will look at a
little more closely.",00:09:13.340,00:09:18.110
"So much for overview, let's get
started with today's lecture",00:09:18.110,00:09:22.530
for real.,00:09:22.530,00:09:24.490
"And here's the theme
of today's lecture.",00:09:24.490,00:09:27.360
"I talked a bit
about tractability",00:09:30.050,00:09:31.640
and intractability.,00:09:31.640,00:09:33.470
"And what is fascinating
about algorithms",00:09:33.470,00:09:36.110
"is that you might
see a problem that",00:09:36.110,00:09:41.020
"has a fairly obvious polynomial
time solution or a linear time",00:09:41.020,00:09:46.440
"solution, then you change
it ever so slightly,",00:09:46.440,00:09:50.360
"and the linear time
algorithm doesn't work.",00:09:50.360,00:09:53.360
"Maybe you can find
a cubic algorithm.",00:09:53.360,00:09:56.370
"And then you change
it a little more,",00:09:56.370,00:09:59.890
"and you end up with
something that you",00:09:59.890,00:10:03.800
"can't find a polynomial
time algorithm for.",00:10:03.800,00:10:06.130
"You can't prove that the
polynomial time algorithm",00:10:06.130,00:10:10.510
"or polynomial monomial
time algorithm",00:10:10.510,00:10:12.980
"gives you the optimal
solution in all cases.",00:10:12.980,00:10:15.690
"And then you go off
into complexity theory.",00:10:15.690,00:10:18.700
"You maybe discover that, or
show that this problem is",00:10:18.700,00:10:23.630
"NP-complete, and now you're
in the intractability domain.",00:10:23.630,00:10:27.560
"So very small changes
in problem statements",00:10:27.560,00:10:32.540
"can end up with very
different situations",00:10:32.540,00:10:39.150
"from a standpoint of
algorithm complexity.",00:10:39.150,00:10:41.960
"And so that's really
what I want to point out",00:10:41.960,00:10:46.480
"to you in some detail
with a concrete example.",00:10:46.480,00:10:50.585
"So I want to get a
little bit pedantic here",00:10:59.130,00:11:02.630
"with respect to intractability
and tractability.",00:11:02.630,00:11:06.820
"You've seen, I think, these
terms before in the one lecture",00:11:06.820,00:11:12.580
"in 006, but we'll go over this
in some detail today and more",00:11:12.580,00:11:19.580
later on in the semester.,00:11:19.580,00:11:21.310
"But for now, let's recall some
basic terminology associated",00:11:21.310,00:11:27.090
"with tractability and
intractability or complexity",00:11:27.090,00:11:29.990
"theory, broadly speaking.",00:11:29.990,00:11:32.530
"Capital P is a class of problems
solvable in polynomial time.",00:11:32.530,00:11:39.700
"And think of that
as big O, n raised",00:11:45.560,00:11:48.600
to k for some constant k.,00:11:48.600,00:11:54.686
"Now you can have long
factors in there,",00:11:54.686,00:11:57.210
"but once you put a big
O in there, you're good.",00:11:57.210,00:12:00.550
"You can always
say, order n, even",00:12:00.550,00:12:04.000
"if it's a logarithmic
problem, and big O",00:12:04.000,00:12:08.140
lets you be sloppy like that.,00:12:08.140,00:12:10.790
"And there are many examples
of polynomial time algorithms,",00:12:10.790,00:12:15.410
"of course, for interesting
problems like shortest paths.",00:12:15.410,00:12:18.760
"So the shortest path
problem is order V square,",00:12:18.760,00:12:22.600
"where V is the number of
vertices in the graph.",00:12:22.600,00:12:25.070
There's algorithms for that.,00:12:25.070,00:12:26.810
"You can do a little bit
better if you use fancier data",00:12:26.810,00:12:32.380
"structure, but
that's an example.",00:12:32.380,00:12:35.660
"NP is another class of problems
that's very interesting.",00:12:35.660,00:12:42.050
"This is the class of
problems that whose solution",00:12:42.050,00:12:48.030
"is verifiable in
polynomial time.",00:12:48.030,00:12:51.810
"So an example of a problem in
NP that is not known to be NP",00:12:55.640,00:13:06.060
"is the Hamiltonian
cycle problem.",00:13:06.060,00:13:10.710
"And the Hamiltonian
cycle problem",00:13:10.710,00:13:13.180
"corresponds to given a directed
graph, find a simple cycle.",00:13:13.180,00:13:31.260
"So you can repeat vertices,
but you need the simple cycle",00:13:31.260,00:13:37.900
to contain each vertex in V.,00:13:37.900,00:13:48.250
"And determining whether a given
cycle is a Hamiltonian cycle",00:13:48.250,00:13:55.500
or not is simple.,00:13:55.500,00:13:57.740
You just traverse the cycle.,00:13:57.740,00:14:00.400
"Make sure that you've touched
all the vertices exactly once,",00:14:00.400,00:14:03.780
and you're done.,00:14:03.780,00:14:04.690
"Clearly doable in
polynomial time.",00:14:04.690,00:14:07.430
"So therefore, Hamiltonian
cycle is an NP,",00:14:07.430,00:14:10.390
"but determining whether a
graph has a Hamiltonian cycle",00:14:10.390,00:14:16.620
or not is a hard problem.,00:14:16.620,00:14:19.850
"And in particular, the
notion of NP completeness",00:14:19.850,00:14:31.000
"is something that defines the
level of intractability for NP.",00:14:31.000,00:14:39.940
"The NP complete problems are
the hardest problems in NP,",00:14:39.940,00:14:45.450
"and Hamiltonian
cycle is one of them.",00:14:45.450,00:14:47.820
"If you can solve any NP complete
problem in polynomial time,",00:14:47.820,00:14:55.710
"you can solve all problems
in NP in polynomial time.",00:14:55.710,00:14:59.710
"So that's what I meant by saying
that NP complete problems are,",00:14:59.710,00:15:03.670
"in some sense, the
hardest problems an NP",00:15:03.670,00:15:06.050
"because solving one of
them gives you everything.",00:15:06.050,00:15:10.000
"So the definition
of NP completeness",00:15:10.000,00:15:12.900
"is that the problem
is in NP and is",00:15:12.900,00:15:19.070
"as hard-- an
informal definition--",00:15:19.070,00:15:23.370
as any problem in NP.,00:15:23.370,00:15:26.280
"And so Hamiltonian cycle
is an NP complete problem.",00:15:33.050,00:15:37.110
"Satisfiability is an
NP complete problem,",00:15:37.110,00:15:39.410
"and there's a whole
bunch of them.",00:15:39.410,00:15:41.250
"So going back to our theme
here, what I want to show you",00:15:41.250,00:15:46.130
"is how for an interval
scheduling problem, that I'll",00:15:46.130,00:15:50.200
"define in a couple of minutes,
how we move from linear time,",00:15:50.200,00:15:57.960
"therefore P, to something
that's still in P.",00:15:57.960,00:16:01.930
"But it's a little
more complicated",00:16:01.930,00:16:03.500
"if I change the constraints
of a problem a little bit.",00:16:03.500,00:16:06.360
"And finally, if I add more
constraints to the problem,",00:16:06.360,00:16:10.450
"generalize it-- and
you can think of it",00:16:10.450,00:16:12.100
"as adding constraints
or generalizing",00:16:12.100,00:16:14.180
"the problem-- you get
small changes to something",00:16:14.180,00:16:19.930
that becomes NP complete.,00:16:19.930,00:16:22.250
"So this is something
that algorithm designers",00:16:22.250,00:16:25.890
"have to keep in mind because
before you go off and try",00:16:25.890,00:16:30.390
"to design an algorithm
for a problem",00:16:30.390,00:16:32.620
"you like to know where in the
spectrum your problem resides.",00:16:32.620,00:16:37.760
"And in order to
do that, you need",00:16:37.760,00:16:41.330
"to understand algorithm
paradigms obviously and be",00:16:41.330,00:16:44.660
"able to apply them, but you also
have to understand reductions",00:16:44.660,00:16:48.420
"where you can try and translate
one problem to another.",00:16:48.420,00:16:51.430
"And if you can do that,
and the first problem",00:16:51.430,00:16:55.550
"is known to be hard, then
you can make arguments",00:16:55.550,00:16:58.660
"about the hardness
of your problem.",00:16:58.660,00:17:02.060
"So these are the kinds of things
that we'll touch upon today,",00:17:02.060,00:17:06.020
"the analysis of an algorithm,
the design of an algorithm,",00:17:06.020,00:17:12.440
"and also the complexity analysis
of an algorithm, which may not",00:17:12.440,00:17:16.579
"just be an
asymptotic-- well, this",00:17:16.579,00:17:18.900
"is order n cubed
or order n square",00:17:18.900,00:17:21.339
"but more in the realm of
NP completeness as well.",00:17:21.339,00:17:25.510
"So so much for
context, let's dive",00:17:28.280,00:17:32.000
"into our interval scheduling
problem, which is something",00:17:32.000,00:17:39.520
"that you can imagine
doing for classes,",00:17:39.520,00:17:44.670
"tasks, a particular schedule
during a day, life in general.",00:17:44.670,00:17:50.110
"And in the general setting, we
have resources and requests,",00:17:50.110,00:17:59.140
"and we're going to have a single
resource for our first version",00:17:59.140,00:18:03.600
of the problem.,00:18:03.600,00:18:05.190
"And our requests are
going to be 1 through n,",00:18:05.190,00:18:10.640
"and we can think
of these requests",00:18:10.640,00:18:12.550
"as requiring time
corresponding to the resource.",00:18:12.550,00:18:17.100
"So the request is
for the resource,",00:18:17.100,00:18:19.300
"and you want time
on the resource.",00:18:19.300,00:18:20.790
Maybe it's computation time.,00:18:20.790,00:18:22.280
Maybe it's your time.,00:18:22.280,00:18:24.420
It could be anything.,00:18:24.420,00:18:26.550
"Each of these requests responds
to an interval of time,",00:18:26.550,00:18:32.230
"and that's where
the name comes from.",00:18:32.230,00:18:34.460
si is start time time.,00:18:34.460,00:18:40.030
"fi is the finish
time, and we're going",00:18:40.030,00:18:46.650
"to say si is strictly
less than fi.",00:18:46.650,00:18:50.660
"So I didn't put less
than or equal to there",00:18:50.660,00:18:52.970
"because I want these requests
to be non-null, non-zero,",00:18:52.970,00:18:57.790
"so otherwise they're
uninteresting.",00:18:57.790,00:19:00.810
"And we're going to
have a start time,",00:19:00.810,00:19:02.680
"and we're going to have an end
time, and they're not equal.",00:19:02.680,00:19:05.860
"So that's the first part
of the specification",00:19:05.860,00:19:11.270
"of the problem and
then the second part,",00:19:11.270,00:19:15.000
"which is intuitive is that
two requests-- we have",00:19:15.000,00:19:21.370
"a single resource
here remember-- i",00:19:21.370,00:19:24.460
"and j are considered
to be compatible,",00:19:24.460,00:19:30.390
"which means you can satisfy
both of these requests.",00:19:30.390,00:19:33.810
They're compatible.,00:19:33.810,00:19:34.760
"Incompatible requests,
you can't satisfy",00:19:34.760,00:19:37.330
"with your single
resource simultaneously--",00:19:37.330,00:19:41.600
Provided they don't overlap.,00:19:41.600,00:19:45.345
"And an overlapping condition
might be that fi is less than",00:19:51.850,00:19:58.450
"or equal to sg, or fj
less than or equal to si.",00:19:58.450,00:20:08.430
"So again, I put a less
than or equal to here,",00:20:08.430,00:20:11.110
"which is important
to spend a minute on.",00:20:11.110,00:20:16.160
"What I'm saying here in this
context is that I really have",00:20:16.160,00:20:22.470
"open-ended intervals on the
right-hand side corresponding",00:20:22.470,00:20:26.970
to the fi's.,00:20:26.970,00:20:29.420
"So pictorially, you could
look at it this way.",00:20:29.420,00:20:35.190
"Let's say I have
intervals like this.",00:20:35.190,00:20:40.830
So this is interval number 1.,00:20:40.830,00:20:42.830
That's interval number 2.,00:20:42.830,00:20:44.640
"Right here I have s of 1, f of
1 out here, s of 2 out here,",00:20:44.640,00:20:53.360
and f of 2 out here.,00:20:53.360,00:20:55.150
"So this is f of 1 for
that and s of 2 for this.",00:20:55.150,00:21:01.910
"I'm allowing s of 2 and f
of 1 to be exactly equal,",00:21:01.910,00:21:07.920
"and I still agree that these
two are compatible requests.",00:21:07.920,00:21:14.960
"So this is-- I guess
it's terminology.",00:21:14.960,00:21:17.860
"It's our definition
of compatibility.",00:21:17.860,00:21:22.940
"So you can imagine now
an optimization problem",00:21:22.940,00:21:29.000
"that is associated with
interval scheduling",00:21:29.000,00:21:31.880
"where, in a different
example, I have",00:21:31.880,00:21:35.980
"this interval
corresponding to s1 and f1.",00:21:35.980,00:21:40.780
"I might have a different
interval here corresponding",00:21:40.780,00:21:45.200
"to 2, then corresponding to 3.",00:21:45.200,00:21:48.750
"And then maybe I've
got 4 here, 5, and 6.",00:21:48.750,00:21:56.990
"So those are my six intervals
corresponding to my input.",00:21:56.990,00:22:03.090
I have a single resource.,00:22:03.090,00:22:04.760
"I'm just drawn out in
a two-dimensional form.",00:22:04.760,00:22:08.110
"There's six different
requests that I have,",00:22:08.110,00:22:11.220
the six different intervals.,00:22:11.220,00:22:12.700
"Intervals and
requests are synonyms.",00:22:12.700,00:22:16.260
"And my goal here-- and it's kind
of obvious in this example--",00:22:16.260,00:22:20.780
"is to select a compatible subset
of requests, or intervals,",00:22:20.780,00:22:42.540
that is of maximum size.,00:22:42.540,00:22:43.785
"And I'd like to do
this efficiently.",00:22:49.850,00:22:53.540
"So we'll always consider
efficiency here,",00:22:53.540,00:22:56.480
"but in terms of the
specification of the problem as",00:22:56.480,00:22:59.860
"opposed to a requirement on the
complexity of the algorithm,",00:22:59.860,00:23:05.450
"I want maximum size
for this subset.",00:23:05.450,00:23:09.940
"So as I showed you, or
I mentioned earlier,",00:23:09.940,00:23:13.570
"in this case, it is
clear from the drawing",00:23:13.570,00:23:18.150
"that I put up there that the
maximum size for that six",00:23:18.150,00:23:21.200
"requests example
that I have is three.",00:23:21.200,00:23:25.820
So that's the set up.,00:23:25.820,00:23:27.900
"Now we're going to spend
the next few minutes",00:23:27.900,00:23:33.490
"talking about a greedy
strategy for solving",00:23:33.490,00:23:37.840
this particular problem.,00:23:37.840,00:23:39.990
"If you don't know of
it, the greedy strategy",00:23:39.990,00:23:43.090
"is going to always produce
the maximum size or not.",00:23:43.090,00:23:49.540
"In fact, it depends on the
particular greedy heuristic,",00:23:49.540,00:23:54.750
"the selection heuristic that
a greedy algorithm uses.",00:23:54.750,00:23:58.710
"So that's going to be important,
and we'll take a look--",00:23:58.710,00:24:01.410
"and hopefully you
can suggest some--",00:24:01.410,00:24:03.060
"at a few different
greedy heuristics.",00:24:03.060,00:24:06.970
"But my claim, overall
claim, that I'm",00:24:06.970,00:24:10.297
"going to have to
spend a bunch of time",00:24:10.297,00:24:11.880
"here justifying and
eventually proving",00:24:11.880,00:24:15.300
"is that we can solve
this problem using",00:24:15.300,00:24:27.210
a greedy algorithm.,00:24:27.210,00:24:28.160
Now what is a greedy algorithm?,00:24:30.730,00:24:32.730
You've seen some examples.,00:24:32.730,00:24:36.190
"As the name implies, it's
something that's myopic.",00:24:36.190,00:24:42.240
It doesn't look ahead.,00:24:42.240,00:24:43.750
"It looks to maximize
the very first thing",00:24:43.750,00:24:48.700
that you couldn't maximize.,00:24:48.700,00:24:51.660
"It says-- traffic is a
good example-- don't let",00:24:51.660,00:24:57.050
anybody cut in front of you.,00:24:57.050,00:24:58.840
You've got some room up there.,00:24:58.840,00:25:00.210
Get up there.,00:25:00.210,00:25:02.780
"Generally, people
are greedy when",00:25:02.780,00:25:07.040
"it comes to getting
to work, trying",00:25:07.040,00:25:10.120
"to minimize the time
and, in this case,",00:25:10.120,00:25:13.330
"on the time that they
spend on the road.",00:25:13.330,00:25:15.480
But we've had other examples.,00:25:15.480,00:25:18.230
"For example, when you look
at interval scheduling,",00:25:18.230,00:25:22.240
"you might say, I'm going to
pick the smallest request.",00:25:22.240,00:25:29.410
"And I'm going to pick the
smallest request first,",00:25:29.410,00:25:32.510
"and I'm going to try
and collect together",00:25:32.510,00:25:34.490
as many requests as possible.,00:25:34.490,00:25:36.270
"And if the requests
are small in the sense",00:25:36.270,00:25:38.020
"that si and fi, for
the two requests,",00:25:38.020,00:25:41.620
"are close to each other, then
maybe that's the best strategy.",00:25:41.620,00:25:46.440
"So that's an example
of a greedy strategy",00:25:46.440,00:25:50.050
for our particular example.,00:25:50.050,00:25:52.130
"But just to give you a slightly
better definition of greedy",00:25:52.130,00:25:59.050
"than what I've said so
far, a greedy algorithm",00:25:59.050,00:26:04.780
"is a myopic algorithm
that does two things.",00:26:04.780,00:26:18.270
"It processes the input one piece
at a time with no apparent look",00:26:18.270,00:26:35.121
ahead.,00:26:35.121,00:26:35.620
"So what happens is that greedy
algorithms are typically",00:26:39.820,00:26:42.910
quite efficient.,00:26:42.910,00:26:45.550
"What you end up doing is looking
at a small part of the problem",00:26:45.550,00:26:51.340
"instance and
deciding what to do.",00:26:51.340,00:26:55.040
"Once you've done
that, then you're",00:26:55.040,00:26:57.790
"in a situation where the problem
has gotten a little bit simpler",00:26:57.790,00:27:01.080
"because you've already
solved part of it,",00:27:01.080,00:27:03.780
and then you move on.,00:27:03.780,00:27:05.680
"So what would a template
for a greedy algorithm",00:27:05.680,00:27:09.180
"look like for our interval
scheduling problem?",00:27:09.180,00:27:13.420
"Here's a template that
probably puts it all together",00:27:13.420,00:27:17.590
"and gives you a good sense of
what I mean by greedy, at least",00:27:17.590,00:27:24.310
in this context.,00:27:24.310,00:27:24.980
"So before we even get into
particulars of selection",00:27:29.150,00:27:34.400
"strategies, let me
give you a template",00:27:34.400,00:27:38.170
for greedy interval scheduling.,00:27:38.170,00:27:41.905
"So step 1, use a simple
rule to select a request.",00:27:46.350,00:27:54.910
"And once you do that, if you
selected a particular request--",00:28:00.630,00:28:08.180
let's say you selected 1.,00:28:08.180,00:28:11.730
"What happens now once
you've selected 1?",00:28:11.730,00:28:16.630
"Well, you're done.",00:28:16.630,00:28:17.850
You can't select 2.,00:28:17.850,00:28:18.730
You can't select 3.,00:28:18.730,00:28:19.650
You can't select 4.,00:28:19.650,00:28:20.599
You can't select 5.,00:28:20.599,00:28:21.390
You can't select 6.,00:28:21.390,00:28:23.560
"So if you have selected 1
in this case, you're done,",00:28:23.560,00:28:27.880
"but we have to codify
that in a step here.",00:28:27.880,00:28:32.260
"And what that means
is that we have",00:28:32.260,00:28:34.500
"to reject all requests that
are incompatible with i.",00:28:34.500,00:28:44.400
"And at this point, because we've
rejected a bunch of requests,",00:28:46.930,00:28:51.190
our problem got smaller.,00:28:51.190,00:28:54.480
"And so you now have
a smaller problem,",00:28:54.480,00:28:59.180
"and you just repeat-- go back to
step 1-- until all requests are",00:28:59.180,00:29:06.400
processed.,00:29:06.400,00:29:06.900
"All right, so that's
a classical template",00:29:09.620,00:29:12.480
for a greedy algorithm.,00:29:12.480,00:29:15.000
"You just go through these
really simple steps.",00:29:15.000,00:29:19.350
"And the reason
this is a template",00:29:19.350,00:29:22.410
"is because I haven't
specified a particular rule,",00:29:22.410,00:29:26.430
"and so it's not quite an
algorithm that you can code yet",00:29:26.430,00:29:30.200
because we need a rule.,00:29:30.200,00:29:32.390
"So with all of that
context, let me ask you.",00:29:32.390,00:29:38.230
"What is a rule that you
think would work well",00:29:38.230,00:29:44.880
"for an interval
scheduling problem?",00:29:44.880,00:29:47.090
"Yeah, go ahead.",00:29:47.090,00:29:48.101
"AUDIENCE: Select one with
the earliest finish time.",00:29:48.101,00:29:50.360
"SRINIVAS DEVADAS: Select one
with the earliest finish time.",00:29:50.360,00:29:52.430
"All right, well, I did
not want that answer.",00:29:52.430,00:29:54.440
[LAUGHTER],00:29:54.440,00:29:56.640
"But now that you've
given me the answer,",00:29:56.640,00:29:59.360
"I have to do
something about this.",00:29:59.360,00:30:01.640
"So I want a different answer, so
we'll go to a different person.",00:30:01.640,00:30:06.040
"But before I do that, let me
reward you for that answer",00:30:06.040,00:30:13.480
"I did not want with a limited
edition 6046 Frisbee, OK?",00:30:13.480,00:30:22.472
[APPLAUSE],00:30:22.472,00:30:25.200
"You need to stand up
because I don't want",00:30:25.200,00:30:26.995
to take people's heads off.,00:30:26.995,00:30:28.120
[LAUGHTER],00:30:28.120,00:30:28.240
Yeah sorry.,00:30:28.240,00:30:28.770
"All right, so here you go.",00:30:28.770,00:30:31.522
All right?,00:30:31.522,00:30:32.468
Good.,00:30:32.468,00:30:32.968
[APPLAUSE],00:30:32.968,00:30:34.420
So people do cookies and candy.,00:30:34.420,00:30:38.390
"I think Eric, Nancy
and I are cooler.",00:30:38.390,00:30:40.340
[LAUGHTER],00:30:40.340,00:30:41.790
So we do Frisbees.,00:30:41.790,00:30:45.800
"All right, good, so
the fact of the matter",00:30:45.800,00:30:48.930
"was that this class was
scheduled for 9:30 to 11:00",00:30:48.930,00:30:54.570
on Tuesdays and Thursdays.,00:30:54.570,00:30:56.200
"That's when we decided
to do Frisbees.",00:30:56.200,00:30:59.370
"And then it got shifted
over to 11:00 to 12:30,",00:30:59.370,00:31:01.530
"but then we bought all these
Frisbees, so we said, whatever.",00:31:01.530,00:31:05.270
"It's not like we
could use all of them",00:31:05.270,00:31:07.424
"All right, good.",00:31:07.424,00:31:08.090
"So I don't like that answer,
and I want a different one.",00:31:08.090,00:31:12.887
Give me another one.,00:31:12.887,00:31:13.720
"Yeah, go ahead.",00:31:13.720,00:31:14.485
"AUDIENCE: Just carry it
through in numerical order.",00:31:14.485,00:31:16.610
SRINIVAS DEVADAS: I'm sorry?,00:31:16.610,00:31:17.120
"AUDIENCE: Just carry it
through in numerical order.",00:31:17.120,00:31:19.340
"SRINIVAS DEVADAS: Carry it
through in numerical order.",00:31:19.340,00:31:21.590
Is that going to work?,00:31:21.590,00:31:22.760
"And what's an example
that it didn't work?",00:31:22.760,00:31:25.770
"The one right there, right?",00:31:25.770,00:31:27.830
Should I get her a Frisbee?,00:31:27.830,00:31:30.190
We should.,00:31:30.190,00:31:31.391
"I'm going to be generous
at the beginning.",00:31:31.391,00:31:33.140
You can just--,00:31:33.140,00:31:33.723
But that's an answer I liked.,00:31:36.280,00:31:38.080
"Yeah, there you go.",00:31:38.080,00:31:42.280
"So entering through a numeric
order isn't going to work.",00:31:42.280,00:31:46.370
"This is a great
example right there.",00:31:46.370,00:31:50.486
Give me another one.,00:31:50.486,00:31:52.900
[LAUGHTER],00:31:52.900,00:31:55.430
"There are no
Frisbees right here.",00:31:55.430,00:31:56.820
"Over there, yeah?",00:31:56.820,00:31:58.320
"AUDIENCE: Try the one
with the shortest time.",00:31:58.320,00:32:01.136
"SRINIVAS DEVADAS: Ah, try the
one with the shortest time.",00:32:01.136,00:32:03.510
"OK, so the shortest time in
this case might be this one.",00:32:03.510,00:32:09.001
"The shortest time
might be this one,",00:32:09.001,00:32:10.500
"and, hey, that might
work in this case",00:32:10.500,00:32:12.083
"because you pick this one,
which is the shortest,",00:32:12.083,00:32:14.600
"or maybe it's five,
which is the shortest.",00:32:14.600,00:32:16.860
"Either way, you could get 2, 5,
and 6, looking at this picture,",00:32:16.860,00:32:20.870
seems to work.,00:32:20.870,00:32:22.420
"Maybe 4, 5, and 6 if you pick
5 first, et cetera, right?",00:32:22.420,00:32:27.050
"I'll give you a Frisbee if you
can take that same algorithm",00:32:27.050,00:32:31.010
and give me a counter example.,00:32:31.010,00:32:32.260
"AUDIENCE: Let's say you have two
requests which don't overlap,",00:32:39.120,00:32:43.762
and then there's--,00:32:43.762,00:32:44.512
"SRINIVAS DEVADAS: --there's
one right in the middle,",00:32:44.512,00:32:46.678
exactly right.,00:32:46.678,00:32:47.680
"Yep, so let's see.",00:32:47.680,00:32:50.780
What do I do?,00:32:50.780,00:32:51.830
"Oh, here.",00:32:51.830,00:32:52.420
"So pictorially, a really
you can look at this,",00:32:56.320,00:33:00.020
"and you can actually figure out
whether your heuristic works",00:33:00.020,00:33:04.960
or not.,00:33:04.960,00:33:05.460
"But this, I think, what
you were thinking about.",00:33:05.460,00:33:07.460
"There you go, right?",00:33:10.720,00:33:12.950
So you get one.,00:33:12.950,00:33:14.450
So that clearly doesn't work.,00:33:17.322,00:33:18.530
"So this one was
smallest, doesn't work.",00:33:18.530,00:33:24.730
"The suggestion
here was a numeric.",00:33:24.730,00:33:27.090
It doesn't work.,00:33:30.350,00:33:31.030
"Here's one that
might actually work.",00:33:34.900,00:33:40.030
"For each request,
find the number",00:33:40.030,00:33:46.550
of incompatible requests.,00:33:46.550,00:33:48.020
So you've got a request.,00:33:51.880,00:33:52.880
"You can always intersect
the other requests with it",00:33:52.880,00:33:56.230
"and decide whether the second
request is compatible or not,",00:33:56.230,00:34:00.800
"and you do this for
every other request.",00:34:00.800,00:34:03.670
"And you can collect
together numbers associated",00:34:03.670,00:34:07.450
"with how many incompatible
requests a particular request",00:34:07.450,00:34:12.240
"has, and you say, well, let
me use that as a heuristic.",00:34:12.240,00:34:17.760
"So each request, find number
of incompatible requests",00:34:17.760,00:34:21.750
"and select the one
with the minimum number",00:34:21.750,00:34:30.401
of incompatibles.,00:34:30.401,00:34:31.109
"So just to be
clear, in this case,",00:34:36.110,00:34:40.090
"you would not select
1 because clearly 1 is",00:34:40.090,00:34:43.020
"incompatible with
every other request,",00:34:43.020,00:34:45.659
"so that clearly is
not numeric order.",00:34:45.659,00:34:48.150
"In this case, you would
not select this one",00:34:48.150,00:34:50.500
"because it's incompatible
with this one and that one.",00:34:50.500,00:34:53.580
"So you'd select that one
which has the minimum number",00:34:53.580,00:34:56.020
of incompatibles.,00:34:56.020,00:34:57.650
"So you think this
is going to produce",00:34:57.650,00:34:59.630
"the correct answer, the maximum
answer, in every possible case?",00:34:59.630,00:35:06.333
AUDIENCE: No.,00:35:06.333,00:35:07.260
"SRINIVAS DEVADAS:
No, who said, no?",00:35:07.260,00:35:10.460
"Well, anybody who said,
no, should give me",00:35:10.460,00:35:12.290
a counter example.,00:35:12.290,00:35:13.420
"Yeah, go for it.",00:35:13.420,00:35:14.450
"AUDIENCE: If the
one that it selects",00:35:14.450,00:35:16.845
"has mutually incompatible
collection of intervals",00:35:16.845,00:35:21.156
with which it's compatible.,00:35:21.156,00:35:23.560
"SRINIVAS DEVADAS: Right,
so that's a good thought.",00:35:23.560,00:35:27.740
We'll have to [INAUDIBLE] that.,00:35:27.740,00:35:29.390
"And I think this
particular example,",00:35:29.390,00:35:31.910
"that's exactly what
you said, which",00:35:31.910,00:35:34.940
"just instantiates your notion
of mutual incompatibility.",00:35:34.940,00:35:43.290
"So here's an example
where I have something.",00:35:43.290,00:35:46.360
It's a little more complicated.,00:35:46.360,00:35:48.010
"As you can see, this is
a pretty good heuristic.",00:35:48.010,00:35:50.960
"It's not perfect as you can
see from this example, where",00:35:50.960,00:35:55.570
I have something like this.,00:35:55.570,00:36:01.805
"So if you look at this,
what I have here is",00:36:13.910,00:36:22.600
"I have just a bunch
of requests which",00:36:22.600,00:36:25.800
"have-- this is incompatible
with this and that",00:36:25.800,00:36:29.760
"and these two, so clearly a lot
of incompatibilities for these,",00:36:29.760,00:36:33.870
"a lot incompatibilities
for these.",00:36:33.870,00:36:36.390
Which is the minimum?,00:36:36.390,00:36:38.580
"The one in here, but what
happens if you select that?",00:36:38.580,00:36:43.460
"Well, clearly you don't get
this solution, which is optimal.",00:36:43.460,00:36:47.720
"The one on top, so this
is a bad selection.",00:36:47.720,00:36:51.800
"And so this doesn't
work either, OK?",00:36:56.273,00:36:59.880
There you go.,00:36:59.880,00:37:00.900
"So as it turns out,
the reason I didn't",00:37:04.120,00:37:07.510
"like that first answer
was it was correct.",00:37:07.510,00:37:10.830
[LAUGHTER],00:37:10.830,00:37:12.440
"It's actually a
beautiful heuristic.",00:37:12.440,00:37:15.070
"Earliest finish time is a
heuristic that is-- well,",00:37:15.070,00:37:21.194
"it's not really a
heuristic in the sense",00:37:21.194,00:37:22.860
"that if you use
that selection rule,",00:37:22.860,00:37:25.940
then it works in every case.,00:37:25.940,00:37:29.700
"In every case, it's going to get
to you the maximum number, OK?",00:37:29.700,00:37:35.150
"Earliest finished time
so what does that mean?",00:37:35.150,00:37:41.110
"Well, it just means that
I'm going to just scan",00:37:41.110,00:37:46.690
"the f of i's associated with the
list of requests that I have,",00:37:46.690,00:37:52.670
"and I'm going to pick
the one that is minimum.",00:37:52.670,00:37:56.680
"Minimum f of i means
earliest finish time.",00:37:56.680,00:37:59.860
"Now you can just step
back, and I'm not",00:37:59.860,00:38:01.730
"going to do this for every
diagram that I have up here,",00:38:01.730,00:38:06.650
"but look at every
example that I've put up.",00:38:06.650,00:38:09.510
"Apply the selection rule
associated with earliest finish",00:38:09.510,00:38:14.250
"time, and you'll see
that it works and gets",00:38:14.250,00:38:17.840
you the maximum number.,00:38:17.840,00:38:19.370
"For example, over here, this
has the earliest finish time.",00:38:19.370,00:38:27.630
"Not this, not this,
it's over here.",00:38:27.630,00:38:29.760
"So you pick that, and then you
use the greedy algorithm step 2",00:38:29.760,00:38:35.170
"to eliminate all of
the intervals that are",00:38:35.170,00:38:38.680
"incompatible, so these go away.",00:38:38.680,00:38:41.500
"Once this goes away, this
one has the earliest finish",00:38:41.500,00:38:45.050
time and so on and so forth.,00:38:45.050,00:38:48.480
"So this is something that you
can prove through examples.",00:38:48.480,00:38:56.000
"That's not really
a good notion when",00:38:56.000,00:38:58.230
"you can prove to
yourself using examples.",00:38:58.230,00:39:01.760
"And this is where I guess
is the essence of 6046,",00:39:01.760,00:39:08.880
"to some extent 006
comes into play.",00:39:08.880,00:39:12.780
"We will have to prove beyond
a shadow of a doubt using",00:39:12.780,00:39:18.310
"mathematical rigor that the
earliest finish time selection",00:39:18.310,00:39:23.820
"rule always gives us the
maximum number of requests,",00:39:23.820,00:39:30.665
and we're going to do that.,00:39:30.665,00:39:31.790
"It's going to take us
a little bit of time,",00:39:31.790,00:39:33.750
"but that's the kind of thing
you will be expected to do",00:39:33.750,00:39:38.330
and you'll see a lot of in 046.,00:39:38.330,00:39:41.530
OK?,00:39:41.530,00:39:43.590
"So everyone buy
earliest finish time?",00:39:43.590,00:39:47.260
"Yep, go ahead.",00:39:47.260,00:39:48.462
"AUDIENCE: So what if we
consider the simple path",00:39:48.462,00:39:50.922
"example of there's one
request for the whole block,",00:39:50.922,00:39:54.080
"and there's one small request
that it mentioned earlier.",00:39:54.080,00:39:57.577
"SRINIVAS DEVADAS:
Well, you'll get one",00:39:57.577,00:39:59.160
"for-- if there's
any two requests,",00:39:59.160,00:40:01.960
your maximum number is 1.,00:40:01.960,00:40:03.810
"So you pick-- it
doesn't matter--",00:40:03.810,00:40:05.770
"it's not like you want
efficiency of your resource.",00:40:05.770,00:40:08.840
"In this particular case,
we will look at cases",00:40:08.840,00:40:11.390
"where you might have an extra
consideration associated",00:40:11.390,00:40:15.450
"with your problem which
changes the problem that says,",00:40:15.450,00:40:18.770
"I want my resource to
be maximally utilized.",00:40:18.770,00:40:22.210
"If you do that, then
this doesn't work.",00:40:22.210,00:40:24.770
"And that's exactly-- it's
a great question you asked.",00:40:24.770,00:40:27.470
"But I did say that we were going
to look at the team here, which",00:40:27.470,00:40:32.380
"I don't have anymore, but of
how problems change algorithms.",00:40:32.380,00:40:38.150
And so that's a problem change.,00:40:38.150,00:40:40.830
You've got a question.,00:40:40.830,00:40:41.956
"AUDIENCE: I have
a counter example.",00:40:41.956,00:40:43.414
"You have three
intervals that don't",00:40:43.414,00:40:46.110
conflict with one another.,00:40:46.110,00:40:48.085
"You have one interval that
conflicts with the first two",00:40:48.085,00:40:52.376
"and ends earlier
than the first one.",00:40:52.376,00:40:55.912
"SRINIVAS DEVADAS: OK,
so are you claiming",00:40:55.912,00:40:57.620
"that there's going to be a
counter example to earliest",00:40:57.620,00:40:59.870
finish time?,00:40:59.870,00:41:00.430
AUDIENCE: Yes.,00:41:00.430,00:41:00.770
"SRINIVAS DEVADAS: All
right, I would write it down",00:41:00.770,00:41:02.853
on a sheet of paper.,00:41:02.853,00:41:04.680
"And get me a concrete example,
and you can just slide it by.",00:41:04.680,00:41:07.930
"And if you get that before I
finished my proof, you win, OK?",00:41:07.930,00:41:13.470
[LAUGHTER],00:41:13.470,00:41:15.870
So I would write it down.,00:41:15.870,00:41:18.000
"Just write it down, so good.",00:41:18.000,00:41:20.750
"All right, so this
is a contest now.",00:41:20.750,00:41:22.600
[LAUGHTER],00:41:22.600,00:41:25.559
"All right, so we are going
to try and prove this.",00:41:25.559,00:41:27.600
"So there's many ways
you could prove things,",00:41:36.450,00:41:39.780
"and I mean prove
things properly.",00:41:39.780,00:41:42.320
"And I don't know if you've
read the old 6042 proof",00:41:42.320,00:41:46.290
"techniques that
are invalid, which",00:41:46.290,00:41:48.040
"is things like prove
by intimidation, proof",00:41:48.040,00:41:53.230
"because the lecturer said so,
you know, things like that.",00:41:53.230,00:41:56.890
"This is going to be a
classical proof technique.",00:41:56.890,00:41:59.030
"It's going to be a
proof by induction.",00:41:59.030,00:42:01.150
"We're going to go into
it in some detail.",00:42:01.150,00:42:04.360
"Later on in the
term we are going",00:42:04.360,00:42:06.360
to put out sketches of proofs.,00:42:06.360,00:42:08.890
"We are going to be skipping
steps in lecture that",00:42:08.890,00:42:12.300
"are obvious or maybe
not so obvious,",00:42:12.300,00:42:16.810
"but if you paid
attention, then you",00:42:16.810,00:42:19.570
"can infer the middle
step, for example.",00:42:19.570,00:42:23.770
"And so will be doing
proof sketches,",00:42:23.770,00:42:26.710
"and proof sketches are
not sketchy proofs.",00:42:26.710,00:42:29.390
[LAUGHTER],00:42:29.390,00:42:30.870
So keep that in mind.,00:42:30.870,00:42:32.470
"But this particular proof
that we're going to do,",00:42:32.470,00:42:34.700
"I'm going to put
in all the steps",00:42:34.700,00:42:36.170
because it's our first one.,00:42:36.170,00:42:39.210
"And so what we're going to
do here is prove a claim,",00:42:39.210,00:42:46.580
"and the claim is
simply that-- whoops,",00:42:46.580,00:42:57.010
this is not writing very well.,00:42:57.010,00:42:59.980
What is going on here?,00:43:03.390,00:43:04.360
OK.,00:43:11.200,00:43:13.534
[LAUGHTER],00:43:13.534,00:43:16.450
Back to the white.,00:43:16.450,00:43:17.725
"Given a list of intervals
l, our greedy algorithm",00:43:22.480,00:43:37.050
"with earliest finish time
produces k star intervals",00:43:37.050,00:43:53.960
where k star is minimal.,00:43:53.960,00:43:55.340
So that's what we like to prove.,00:44:01.250,00:44:03.430
AUDIENCE: [INAUDIBLE].,00:44:03.430,00:44:05.313
"SRINIVAS DEVADAS:
Sorry, what happened?",00:44:05.313,00:44:06.938
AUDIENCE: [INAUDIBLE],00:44:06.938,00:44:08.180
"SRINIVAS DEVADAS: Oh, right.",00:44:08.180,00:44:10.900
Good point.,00:44:10.900,00:44:13.510
Maximum.,00:44:13.510,00:44:14.010
"What we're going to do is
prove this by induction,",00:44:21.370,00:44:24.720
"and it's going to be
induction on k star.",00:44:24.720,00:44:27.010
"And so the base case is almost
always with induction proofs",00:44:32.070,00:44:40.990
"trivial, and it's
similar here as well.",00:44:40.990,00:44:45.110
"And in the base
case, if you have",00:44:45.110,00:44:49.960
"a single interval
in your list, then",00:44:49.960,00:44:55.360
"obviously that's
a trivial example.",00:44:55.360,00:44:57.950
"But what I'm saying here for
the base is slightly different.",00:44:57.950,00:45:01.420
"It says that the optimal
solution has a single interval,",00:45:01.420,00:45:05.510
right?,00:45:05.510,00:45:06.130
"And so now if your problem has
one interval or two intervals",00:45:06.130,00:45:11.020
"or three intervals, you
can always pick one,",00:45:11.020,00:45:14.380
"and it's clearly going to be
a valid schedule because you",00:45:14.380,00:45:18.205
"don't have to check
compatibility.",00:45:18.205,00:45:19.860
"And so the base
case is trivial even",00:45:19.860,00:45:22.490
"in the case where
you're not talking just",00:45:22.490,00:45:27.990
"of intervals that
have cardinality 1,",00:45:27.990,00:45:32.560
"but the optimal schedule
has cardinality 1.",00:45:32.560,00:45:36.230
So that's a trivial case.,00:45:36.230,00:45:38.770
"So the hard work, of course,
in the induction proofs is",00:45:38.770,00:45:46.750
"assuming the hypothesis
and proving the n-plus-1,",00:45:46.750,00:45:51.930
"or in this case, the
k-star-plus-1 case.",00:45:51.930,00:45:56.510
"And that's what we'll
have to work on.",00:45:56.510,00:45:59.330
"So let's say that the
claim holds for k star,",00:45:59.330,00:46:13.910
"and we are given a
list of intervals",00:46:13.910,00:46:28.260
"who's optimal schedule
is k star plus 1.",00:46:28.260,00:46:33.860
"It has k-star-plus-1 intervals
in the optimal schedule,",00:46:37.110,00:46:45.660
"so L may be some large
number, capital L,",00:46:45.660,00:46:48.300
maybe in the hundreds.,00:46:48.300,00:46:49.650
"And k star, there may
be 10 of what have you.",00:46:49.650,00:46:53.160
They're different.,00:46:53.160,00:46:53.910
I want to point that out.,00:46:53.910,00:46:56.080
"So our optimal schedule, we're
going to write out as this,",00:46:56.080,00:47:05.010
s star.,00:47:05.010,00:47:05.750
"So usually if you use star for
optimal in 046 and it's got",00:47:08.340,00:47:13.550
"k-star-plus-1 entries, and those
entries look like sf pairs--",00:47:13.550,00:47:22.510
"so I'm going to using the
subscript j1 through j k star",00:47:22.510,00:47:28.080
"plus 1 to denote
these intervals.",00:47:28.080,00:47:35.440
"So the first one is sj1, fj1.",00:47:35.440,00:47:39.170
"That's an interval
that's been selected",00:47:39.170,00:47:41.670
"and is part of our
optimal solution.",00:47:41.670,00:47:44.510
"And then you keep going
and we have sj k star",00:47:44.510,00:47:51.590
plus 1 comma fj k star plus 1.,00:47:51.590,00:47:59.470
"So no getting away from
subscripts here in 046 So",00:47:59.470,00:48:06.240
"that's what we have in terms
of this is what the optimal",00:48:06.240,00:48:15.010
schedule is.,00:48:15.010,00:48:15.710
It's got size k star.,00:48:15.710,00:48:17.740
"Of course, what
we have to show is",00:48:17.740,00:48:19.990
"that the greedy algorithm
with the earliest finish time",00:48:19.990,00:48:26.154
"is going to produce
something that",00:48:26.154,00:48:27.570
is k star plus one in size.,00:48:27.570,00:48:30.900
And so that's the hard part.,00:48:30.900,00:48:33.300
"We can assume the
inductive hypothesis,",00:48:33.300,00:48:36.330
and we'll have to do that.,00:48:36.330,00:48:37.950
"But there's a couple
of steps in between.",00:48:37.950,00:48:41.700
"So let's say that what
we have is s1 through k",00:48:41.700,00:48:51.490
"is what the greedy algorithm
produces with the earliest",00:48:51.490,00:48:55.020
finish time.,00:48:55.020,00:48:56.126
"So I'm going to write
that down sik fik,",00:48:56.126,00:49:10.350
"so notice I have k here, and
k and k star, at this point,",00:49:10.350,00:49:17.800
are not comparable.,00:49:17.800,00:49:18.640
"I'm just making a statement that
I took this particular problem",00:49:21.780,00:49:29.860
"that has k star plus 1 in terms
of its optimal solution size,",00:49:29.860,00:49:35.800
"and for that problem,
I have k intervals",00:49:35.800,00:49:39.684
"that are produced by
the earliest finish",00:49:39.684,00:49:41.350
time greedy heuristic.,00:49:41.350,00:49:43.760
"And so that's why the
subscripts here are different.",00:49:43.760,00:49:47.630
"I have i1 here and ik,
and then over here I",00:49:47.630,00:49:51.570
"have the j's, and so these
intervals are different.",00:49:51.570,00:49:54.320
"If I look at f of i plus f
of i1, and if I look f of j1,",00:49:56.940,00:50:07.160
"what can I say about
f of i1 and f of j1?",00:50:07.160,00:50:10.200
"Is there a relationship
between f of i1 and f of j1?",00:50:15.720,00:50:17.950
They're equal?,00:50:21.700,00:50:23.160
Do they have to be equal?,00:50:23.160,00:50:26.380
Yeah?,00:50:26.380,00:50:26.880
AUDIENCE: Less or equal to.,00:50:26.880,00:50:27.990
"SRINIVAS DEVADAS:
Less than equal",00:50:27.990,00:50:29.365
"to, exactly right, so
they're less than equal to.",00:50:29.365,00:50:33.740
"It's possible that
you might end up",00:50:33.740,00:50:37.330
"with a different optimal
solution that doesn't",00:50:37.330,00:50:43.130
use the earliest finish time.,00:50:43.130,00:50:44.520
"We think earliest finish time
is optimal at this point.",00:50:44.520,00:50:46.940
"We haven't proven it yet,
but it's quite possible",00:50:46.940,00:50:49.680
"that you may have
other solutions that",00:50:49.680,00:50:53.880
"are optimal that aren't
necessarily the ones",00:50:53.880,00:50:56.650
"that earliest finish
time gives you.",00:50:56.650,00:50:58.980
"So that's really why the
less than or equal to",00:50:58.980,00:51:01.260
is important here.,00:51:01.260,00:51:04.490
"Now what I'm going to
do is create a schedule,",00:51:04.490,00:51:07.180
"s star star, that essentially
is going to be taking s star",00:51:07.180,00:51:13.270
"and pulling out the first
interval from s star",00:51:13.270,00:51:18.270
"and substituting it
with the first interval",00:51:18.270,00:51:21.000
"from my greedy
algorithms schedule.",00:51:21.000,00:51:24.020
"So I'm just going
to replace that,",00:51:24.020,00:51:25.820
and so s star star is si1 fj1.,00:51:25.820,00:51:32.660
"And then I'm going to
be going back to sj2 fj2",00:51:36.520,00:51:42.500
"because I'm going back to s
star and all the other ones",00:51:42.500,00:51:46.690
are coming from s star.,00:51:46.690,00:51:48.930
"So they're going to be sj k star
plus 1 comma fj k star plus 1.",00:51:48.930,00:52:01.780
"So I just did a little
substitution there associated",00:52:04.350,00:52:08.130
"with the optimal
solution, and I stuck",00:52:08.130,00:52:13.950
"in part of the greedy
algorithm solution,",00:52:13.950,00:52:16.890
"in fact, the very
first schedule.",00:52:16.890,00:52:18.625
AUDIENCE: So the 1 should be i1.,00:52:18.625,00:52:22.542
"SRINIVAS DEVADAS: Oh,
this should be-- i1,",00:52:22.542,00:52:25.580
AUDIENCE: Right?,00:52:25.580,00:52:26.580
"SRINIVAS DEVADAS: i1, thank you.",00:52:26.580,00:52:28.640
"Yep, good.",00:52:28.640,00:52:33.650
"So we've got a couple of things
to do, a couple of observations",00:52:33.650,00:52:39.260
"to make, and we're going
to be able do prove",00:52:39.260,00:52:46.150
"some relationship
between k and k star",00:52:46.150,00:52:48.680
"that is going to give us
the proof for our claim.",00:52:48.680,00:52:51.970
"So clearly, s star
is also optimal.",00:52:56.570,00:53:02.670
"All I've done is
taken one interval out",00:53:02.670,00:53:05.226
"and replaced it
with another one.",00:53:05.226,00:53:06.600
It hasn't changed the size.,00:53:06.600,00:53:08.610
"It goes up to k star plus 1, so
s double star is also optimal.",00:53:08.610,00:53:13.230
"s star is optimal. s
double star is optimal.",00:53:13.230,00:53:17.470
"Now I'm going to define L
prime as the set of intervals",00:53:17.470,00:53:29.210
"with s of i greater than
or equal to f of i1.",00:53:29.210,00:53:35.720
So what is L prime?,00:53:35.720,00:53:37.330
"Well, L prime is what
happens in the second step",00:53:37.330,00:53:41.030
"of the greedy algorithm,
where in the second step",00:53:41.030,00:53:45.500
"of the greedy algorithm,
once I've selected",00:53:45.500,00:53:48.720
"this particular interval
and I've pull it in,",00:53:48.720,00:53:52.000
"I have to reject all of
the other intervals that",00:53:52.000,00:53:54.720
are incompatible with this one.,00:53:54.720,00:53:57.840
"So I'm going to have to take
only those intervals for which",00:53:57.840,00:54:03.880
"s of i is greater than
or equal to f of i1",00:54:03.880,00:54:08.260
"because those are the
ones that are compatible.",00:54:08.260,00:54:14.140
So that's what L prime is.,00:54:14.140,00:54:16.190
"And I'm going to be able
to say that since s double",00:54:16.190,00:54:22.500
"star is optimal for L, s
double star 2 to k star plus 1",00:54:22.500,00:54:38.300
is optimal for L prime.,00:54:38.300,00:54:40.615
"So I'm making a statement
about this optimal solution.",00:54:44.760,00:54:51.670
"I know that's
optimal, and basically",00:54:51.670,00:54:53.660
"what I'm saying is subsets of
the optimal solution are going",00:54:53.660,00:54:58.730
"to have to be optimal because
if that's not the case,",00:54:58.730,00:55:01.360
"I could always substitute
something better and shrink",00:55:01.360,00:55:06.850
"the size of the k star plus
1 optimal solution, which",00:55:06.850,00:55:12.110
"obviously would be
a contradiction.",00:55:12.110,00:55:14.790
"So s double star
is optimal for L,",00:55:14.790,00:55:20.730
"and therefore s double
star 2 through k star",00:55:20.730,00:55:23.816
plus 1 is optimal for L prime.,00:55:23.816,00:55:26.810
Everybody buy that?,00:55:26.810,00:55:28.120
Yep?,00:55:28.120,00:55:29.020
Good.,00:55:29.020,00:55:31.720
"And so what this
means, of course,",00:55:31.720,00:55:33.440
"is that the optimal schedule
for L prime has k star size.",00:55:33.440,00:55:49.100
And I'm starting with 2.,00:55:49.100,00:55:50.290
I've taken away 1.,00:55:50.290,00:55:51.650
"So now I have L prime,
which is a smaller problem.",00:55:51.650,00:55:55.030
"Now you see where the proof is
headed, if you didn't already.",00:55:55.030,00:55:58.575
"I have a smaller problem,
which is L prime.",00:55:58.575,00:56:01.250
"Clearly, it's got
fewer requests,",00:56:01.250,00:56:03.680
"and I have constructed
an optimal schedule",00:56:03.680,00:56:08.930
"for that problem
by pulling it out",00:56:08.930,00:56:11.570
"of the original optimal
schedule I was given.",00:56:11.570,00:56:15.910
"And that size of that
optimal schedule is k star.",00:56:15.910,00:56:21.950
"And now I get to invoke
my inductive hypothesis",00:56:21.950,00:56:26.140
"because my inductive
hypothesis says",00:56:26.140,00:56:29.150
"that this claim that
I have up there holds",00:56:29.150,00:56:31.960
"for any set of
problems that have",00:56:31.960,00:56:36.160
"an optimal schedule
of size k star.",00:56:36.160,00:56:39.430
"That's what the inductive
hypothesis gives me.",00:56:39.430,00:56:42.610
"And so by the
inductive hypothesis,",00:56:42.610,00:56:56.340
"when I run the greedy
algorithm on L prime,",00:56:56.340,00:57:09.520
"I'm going to get sk
schedule of size k star.",00:57:09.520,00:57:19.340
"Now can you tell me, based
on what you see on the board,",00:57:28.920,00:57:33.070
"by construction, when I
run the greedy algorithm,",00:57:33.070,00:57:37.230
what am I getting on L star?,00:57:37.230,00:57:41.830
"By construction, when I run the
greedy algorithm on L prime--",00:57:41.830,00:57:46.980
"there's too many
superscripts here--",00:57:46.980,00:57:49.840
"when I run the greedy algorithm
on L prime, what do I get?",00:57:49.840,00:57:52.980
Someone?,00:57:55.840,00:57:56.851
Yeah?,00:57:56.851,00:57:57.350
"AUDIENCE: We get s of i sub
2, s of i sub 2 interval.",00:57:57.350,00:58:01.244
"SRINIVAS DEVADAS:
Exactly right, I",00:58:01.244,00:58:02.660
"get everything from
the second thing",00:58:02.660,00:58:06.500
"here all the way to the
end because that's exactly",00:58:06.500,00:58:09.910
what the greedy algorithm does.,00:58:09.910,00:58:11.410
"Remember, the greedy
algorithm picked si1 fi1,",00:58:11.410,00:58:15.020
"and then rejected all requests
that are incompatible and then",00:58:15.020,00:58:19.140
move on.,00:58:19.140,00:58:20.090
"When you rejected all requests
that are incompatible here,",00:58:20.090,00:58:23.180
you got exactly L prime.,00:58:23.180,00:58:25.830
"And by construction,
the greedy algorithm",00:58:25.830,00:58:29.130
"should have given me all
the way from si2 too sik.",00:58:29.130,00:58:35.800
Thank you.,00:58:35.800,00:58:37.620
"So by construction,
the greedy on L prime",00:58:37.620,00:58:54.620
"gives s2 to k, right?",00:58:54.620,00:59:00.760
And what is the size of this?,00:59:00.760,00:59:02.985
"2 to k gives me a
size of k minus 1.",00:59:02.985,00:59:07.990
This is k minus 1.,00:59:07.990,00:59:08.970
"So if I put these
two things together,",00:59:15.910,00:59:21.620
what is the next step?,00:59:21.620,00:59:23.125
"I have the inductive
hypothesis giving me a fact.",00:59:23.125,00:59:26.330
"I have the construction
giving me something.",00:59:26.330,00:59:29.380
Now I can relate k and k star.,00:59:29.380,00:59:32.600
What's the relationship?,00:59:32.600,00:59:33.600
"k star is equal to
k minus 1, right?",00:59:38.440,00:59:41.720
Do people see that?,00:59:41.720,00:59:44.710
"So size k star or
just k minus 1.",00:59:44.710,00:59:51.100
"So what that means is
given that s2k is a size k",00:59:51.100,00:59:57.680
"star, it means that s1k
is of size k star plus 1,",00:59:57.680,01:00:05.280
which is exactly what I want.,01:00:05.280,01:00:07.940
"That's optimal because
I said in the beginning",01:00:07.940,01:00:11.860
"that we had k star plus 1 in our
inductive hypothesis this case",01:00:11.860,01:00:16.550
as being the optimal solution.,01:00:16.550,01:00:18.400
"So this last step
here is all you",01:00:18.400,01:00:21.980
"need to argue now that s
of 1k, going back up here,",01:00:21.980,01:00:30.220
"this is optimal because
k equals k star plus 1.",01:00:30.220,01:00:42.140
"There you go, so that's the
kind of argument that you have",01:00:42.140,01:00:48.440
"to make in order to prove
something like this in 046.",01:00:48.440,01:00:53.510
"And what you'll see
in your problem sets,",01:00:53.510,01:00:57.010
"including the one that's
going to come out on Thursday,",01:00:57.010,01:00:59.380
"is that different
problem that you",01:00:59.380,01:01:02.910
"have to have proof for
a greedy algorithm for.",01:01:02.910,01:01:05.907
"I forget exactly
what technique you'll",01:01:05.907,01:01:07.490
"have used there,
perhaps induction,",01:01:07.490,01:01:09.460
perhaps contradiction.,01:01:09.460,01:01:10.900
"And these are the
kinds of things",01:01:10.900,01:01:12.650
"that get you to the
point where you've",01:01:12.650,01:01:17.110
"analyzed the correctness
of algorithms,",01:01:17.110,01:01:19.830
"not just the fact that you're
getting a valid schedule,",01:01:19.830,01:01:22.720
"but you're getting a
valid maximum schedule",01:01:22.720,01:01:26.330
"in terms of the maximum
number of requests.",01:01:26.330,01:01:29.520
Any questions about this?,01:01:29.520,01:01:32.920
Do people buy the proof?,01:01:32.920,01:01:35.110
Yep.,01:01:35.110,01:01:36.308
Good.,01:01:36.308,01:01:37.730
"So that was greedy for
a particular problem.",01:01:37.730,01:01:42.080
"I told you that the
team of our lecture",01:01:42.080,01:01:43.890
"here was changing the
problem and getting",01:01:43.890,01:01:51.200
"different algorithms that
had different complexities.",01:01:51.200,01:01:58.800
So let's go ahead and do that.,01:01:58.800,01:02:00.050
"So the rest of
this lecture, we'll",01:02:00.050,01:02:03.130
"just take a look at
different kinds of problems",01:02:03.130,01:02:05.290
"and talk a little more
superficially about what",01:02:05.290,01:02:09.720
the problem complexities are.,01:02:09.720,01:02:12.160
"And so one thing that
might come to mind",01:02:12.160,01:02:14.480
"is that you'd like to do
weighted interval scheduling.",01:02:14.480,01:02:18.890
"And what happens here is
each request has weight wi,",01:02:23.600,01:02:38.350
"and what we want to do is
schedule a subset of requests",01:02:38.350,01:02:48.420
with maximum weight.,01:02:48.420,01:02:50.180
"So previously, it was
just all weights were 1,",01:02:50.180,01:02:52.600
"so maximum cardinality
was what we wanted.",01:02:52.600,01:02:57.150
"But now we want to schedule
a subset of requests",01:02:57.150,01:02:59.850
with maximum weight.,01:02:59.850,01:03:03.060
"Someone give me an argument as
to whether the greedy algorithm",01:03:03.060,01:03:10.470
"earliest finish time first is
optimal for this weighted case,",01:03:10.470,01:03:15.300
or give me a counter example.,01:03:15.300,01:03:18.320
"Yep, go ahead.",01:03:18.320,01:03:19.960
"AUDIENCE: Oh, well, you
know like your first example",01:03:19.960,01:03:22.285
"you have your first weight
of the first interval,",01:03:22.285,01:03:25.378
"it took the whole
time, [INAUDIBLE]",01:03:25.378,01:03:26.836
would have three smaller ones?,01:03:26.836,01:03:28.324
"Well, if the weight of the
first one was 20 and then--",01:03:28.324,01:03:31.862
"SRINIVAS DEVADAS:
Exactly, exactly right.",01:03:31.862,01:03:33.570
"All right, I owe you one too.",01:03:33.570,01:03:34.830
So here you go.,01:03:34.830,01:03:38.010
"So it's a fairly
trivial example.",01:03:38.010,01:03:41.220
"All you do is w equals 1,
w equals 1, w equals 3,",01:03:41.220,01:03:51.330
so there you go.,01:03:51.330,01:03:53.210
"So clearly, the
earliest finish time",01:03:53.210,01:03:54.800
"would pick this one and then
this one, which is fine.",01:03:54.800,01:03:57.980
"You get two of these,
but this was important.",01:03:57.980,01:04:00.570
"This is, I don't know,
sleep party, 6046.",01:04:00.570,01:04:04.750
[LAUGHTER],01:04:04.750,01:04:06.640
So there you go.,01:04:06.640,01:04:08.580
"So the weight it is, we
should make that infinity.",01:04:08.580,01:04:11.155
"Most important thing
in the world at least",01:04:15.050,01:04:17.720
for the next six months.,01:04:17.720,01:04:19.240
So how does this work now?,01:04:23.130,01:04:24.790
"So it turns out that
the greedy strategy,",01:04:28.640,01:04:33.410
"the template that I had, fails.",01:04:33.410,01:04:37.950
"There's nothing that
exists on this planet",01:04:37.950,01:04:41.660
"that, at least I know of, where
you can have a simple rule",01:04:41.660,01:04:47.520
"and use that template to get the
optimum solution, in this case,",01:04:47.520,01:04:52.900
"maximum weight solution,
for every problem instance,",01:04:52.900,01:04:57.989
so that template just fails.,01:04:57.989,01:04:59.155
"What other programming
paradigm do you",01:05:03.730,01:05:05.426
think would be useful here?,01:05:05.426,01:05:06.550
"Yeah, go ahead.",01:05:09.790,01:05:10.909
AUDIENCE: DP.,01:05:10.909,01:05:11.450
"SRINIVAS DEVADAS: DP, right.",01:05:11.450,01:05:12.820
"So do you want to take a stab
at a potential DP solution here?",01:05:12.820,01:05:18.293
"AUDIENCE: Yeah, so either
include it in your [INAUDIBLE]",01:05:18.293,01:05:21.524
"or discard it and then continue
with set of other intervals.",01:05:21.524,01:05:25.480
"SRINIVAS DEVADAS: Yeah, that's
a perfect divide and conquer.",01:05:25.480,01:05:28.190
"And then when you include
it, what do you have to do?",01:05:28.190,01:05:30.820
"AUDIENCE: Eliminate all
conflicting intervals.",01:05:30.820,01:05:32.737
"SRINIVAS DEVADAS: Right,
how many subproblems",01:05:32.737,01:05:34.611
do you think there are.,01:05:34.611,01:05:36.220
"I want to make you own
your Frisbee, right?",01:05:36.220,01:05:38.588
[LAUGHTER],01:05:38.588,01:05:42.720
"AUDIENCE: 2 to the power
of the number of intervals",01:05:42.720,01:05:50.070
you have because--,01:05:50.070,01:05:51.690
"SRINIVAS DEVADAS: Well,
that's a number of subsets",01:05:51.690,01:05:54.165
that you have.,01:05:54.165,01:05:55.686
"So you have n
intervals, then you",01:05:55.686,01:05:57.060
have two [INAUDIBLE] subsets.,01:05:57.060,01:05:58.600
AUDIENCE: Yeah.,01:05:58.600,01:05:59.590
"SRINIVAS DEVADAS:
But remember, you",01:05:59.590,01:06:01.048
"want to go-- you want to be
smarter than that, right?",01:06:01.048,01:06:04.230
"You want to be a little
bit smarter than that.",01:06:04.230,01:06:07.940
"So here, you get
a Frisbee anyway.",01:06:07.940,01:06:10.560
[LAUGHTER],01:06:10.560,01:06:11.570
"No, not anyway, here you go.",01:06:11.570,01:06:14.150
Right.,01:06:14.150,01:06:16.150
So anybody else?,01:06:16.150,01:06:18.760
"So what I want to use
is dynamic programming.",01:06:18.760,01:06:21.470
We've established that.,01:06:21.470,01:06:23.110
"I want to use
dynamic programming.",01:06:23.110,01:06:24.642
"And the dynamic programming--
you have some experience with",01:06:24.642,01:06:27.100
"that in 006-- the name of the
game is to figure out what",01:06:27.100,01:06:32.210
the subproblems are.,01:06:32.210,01:06:35.320
"The subproblems
are kind of going",01:06:35.320,01:06:36.960
"to look like a
collection of requests.",01:06:36.960,01:06:39.880
"I mean, there's no
two things about it.",01:06:39.880,01:06:42.180
"They're going to be a
collection of requests,",01:06:42.180,01:06:45.260
"and so the challenge here is
not to go to the 2 raised to n,",01:06:45.260,01:06:50.430
"because 2 raised to n is
bad if you want efficiency.",01:06:50.430,01:06:55.960
"So we have to have a polynomial
number of subproblems.",01:06:55.960,01:07:00.500
"So someone who hasn't
answered yet, go ahead.",01:07:00.500,01:07:03.160
"AUDIENCE: [INAUDIBLE] so
[INAUDIBLE] subset [INAUDIBLE]",01:07:03.160,01:07:10.920
"So from interval i to
interval j [INAUDIBLE].",01:07:10.920,01:07:16.122
"SRINIVAS DEVADAS:
So you're looking",01:07:16.122,01:07:17.580
"at every pair of i's and j's,
and, well, not all of them",01:07:17.580,01:07:22.520
are going to be valid.,01:07:22.520,01:07:23.460
"There won't be intervals
associated with that,",01:07:23.460,01:07:26.070
but that's a reasonable start.,01:07:26.070,01:07:29.280
"Someone else, someone
who hasn't answered?",01:07:29.280,01:07:32.860
"Yeah, back there.",01:07:32.860,01:07:33.963
"AUDIENCE: You could
go the best term",01:07:33.963,01:07:35.895
"to start to some even point,
and so there'd n of those.",01:07:35.895,01:07:39.609
"SRINIVAS DEVADAS: Ah, best from
the start to any given point.",01:07:39.609,01:07:42.150
"All right, well, you
got close, Michael.",01:07:42.150,01:07:45.665
There you go.,01:07:45.665,01:07:47.180
You need to stand up.,01:07:47.180,01:07:50.360
"Ew, bad throw.",01:07:50.360,01:07:52.660
That's a bad throw.,01:07:52.660,01:07:54.100
I've got to practice.,01:07:54.100,01:07:56.570
"OK, so as you can see
with dynamic programming,",01:07:56.570,01:08:00.800
"the challenge is to figure
out what the subproblems are.",01:08:00.800,01:08:03.550
"The fact of the
matter is that there's",01:08:03.550,01:08:05.710
"going to be many different
possible algorithms that",01:08:05.710,01:08:10.895
"are all DP for this
weighted problem.",01:08:10.895,01:08:13.630
"There's at least two
interesting ones.",01:08:13.630,01:08:15.520
"We're going to do a simple one,
which is based on the answer",01:08:15.520,01:08:18.350
"that the gentleman
here just gave.",01:08:18.350,01:08:21.689
"But it turns out you can be
a little smarter than that,",01:08:21.689,01:08:24.550
"and most likely you'll hear
the smarter way in the section,",01:08:24.550,01:08:29.451
"but let's do the simple
one because that's",01:08:29.451,01:08:31.200
all I have time here for.,01:08:31.200,01:08:33.210
"And the key is to
define the subproblems,",01:08:33.210,01:08:36.569
"and then once you do that,
the actual recursion ends up",01:08:36.569,01:08:40.210
"being a fairly straightforward
and intuitive step.",01:08:40.210,01:08:45.380
"So let's look at dynamic
programming, one particular way",01:08:45.380,01:08:56.770
"of solving this problem,
using the DP paradigm.",01:08:56.770,01:09:01.020
"So what I'm going to do is
define subproblems R star,",01:09:01.020,01:09:07.149
"so R is the total number
of requests that we have,",01:09:07.149,01:09:10.899
"and the subproblems
are going to correspond",01:09:10.899,01:09:13.370
"to-- I'm going to request
j belonging to R such",01:09:13.370,01:09:19.830
"that-- oh, I'm sorry.",01:09:19.830,01:09:22.010
"This is R of x-- such that sj
is greater than or equal to x.",01:09:22.010,01:09:31.130
"So what I'm doing here
is, given a particular x,",01:09:31.130,01:09:37.960
"I can always shrink
the number of requests",01:09:37.960,01:09:40.680
that I have based on this rule.,01:09:40.680,01:09:45.340
"And then you might
ask, what is x?",01:09:45.340,01:09:48.279
"And now you can apply the
same subsetting property",01:09:48.279,01:09:59.410
"by choosing the x's to be
the finishing times of all",01:09:59.410,01:10:07.030
of the other requests.,01:10:07.030,01:10:08.535
"All right, so x equals f of i.",01:10:08.535,01:10:12.210
"So what this means is-- then
I put f of i over here--",01:10:12.210,01:10:17.680
"it means all of
the requests that",01:10:17.680,01:10:20.360
"come after the i-th request
finished our part of R of fi.",01:10:20.360,01:10:26.940
"So R of fi would simply be
requests later than f of i.",01:10:26.940,01:10:43.350
"And there's something subtle
here that I want to point out,",01:10:43.350,01:10:46.430
"which is R of fi is
not the set of requests",01:10:46.430,01:10:51.790
"that are compatible
with the i-th request.",01:10:51.790,01:10:55.910
It's not exactly that.,01:10:55.910,01:10:57.810
"It's the set of requests
that are later than f of i.",01:10:57.810,01:11:02.324
"So keep that in mind
because what happens here",01:11:02.324,01:11:04.800
"is we're going to solve
this problem step by step.",01:11:04.800,01:11:09.620
"We're going to construct the
dynamic programming solution",01:11:09.620,01:11:13.990
"essentially by
picking a request,",01:11:13.990,01:11:19.410
"just like in the greedy
case, and then taking",01:11:19.410,01:11:21.570
"the request that
comes after that.",01:11:21.570,01:11:23.310
"So we're going to
pick an early request,",01:11:23.310,01:11:26.690
"and then we're going
to subset the solution,",01:11:26.690,01:11:28.570
"pick the next one just like
we did with the greedy.",01:11:28.570,01:11:31.630
"And so the subproblems
that we will actually",01:11:31.630,01:11:35.110
"solve potentially bottom up
if we are doing recursion",01:11:35.110,01:11:38.090
"are going to correspond to a
set of requests that come later",01:11:38.090,01:11:43.290
"than the particular subset
that we're looking at,",01:11:43.290,01:11:48.620
"which is defined by a
particular interval.",01:11:48.620,01:11:51.770
"So requests that are later
than f of i, not necessarily",01:11:51.770,01:11:55.036
"all of the requests
that are compatible",01:11:55.036,01:11:56.660
with the i-th request.,01:11:56.660,01:11:59.043
"And so if you do that, then
the number of subproblems",01:11:59.043,01:12:04.230
"here are small n, where n
is the number of requests.",01:12:04.230,01:12:10.680
"So if n is the
number of requests",01:12:10.680,01:12:16.640
"in the original problem,
the number of sub problems",01:12:16.640,01:12:27.520
"equals n because all I do
is plug-in an appropriate i,",01:12:27.520,01:12:32.070
"find f of i for it, and
generate the R of f of i",01:12:32.070,01:12:35.110
for each of those.,01:12:35.110,01:12:36.290
"So there's going to be
n of those subproblems.",01:12:36.290,01:12:39.210
"And we're going to solve
each subproblem once and then",01:12:39.210,01:12:51.406
memoize.,01:12:51.406,01:12:51.905
"And so the work
that we have to do",01:12:56.140,01:12:59.180
"is the basic rule corresponding
to the complexity of a DP,",01:12:59.180,01:13:04.140
"which is number of
subproblems times the time",01:13:04.140,01:13:16.800
"to solve each subproblem,
or a single subproblem,",01:13:16.800,01:13:24.860
"and this assumes
order 1 for lookups.",01:13:24.860,01:13:33.540
"So you can think of
the recursive calls",01:13:33.540,01:13:36.240
"as being order 1
because your assuming",01:13:36.240,01:13:44.260
you're doing memoization.,01:13:44.260,01:13:46.900
"So I haven't really told
you anything here that you",01:13:46.900,01:13:50.450
"haven't seen in 006 and likely
applied a bunch of times.",01:13:50.450,01:13:56.150
"Over here, we've just defined
what our subproblems are",01:13:56.150,01:14:00.410
"for our particular
DP, and we argued",01:14:00.410,01:14:04.680
"that the number of
subproblems that",01:14:04.680,01:14:06.450
"are associated with
this particular choice",01:14:06.450,01:14:09.110
"of subproblems
corresponds to n if you",01:14:09.110,01:14:11.560
"have n requests in the
original problem instance",01:14:11.560,01:14:14.750
that you've given.,01:14:14.750,01:14:16.460
"So the last thing that we have
to do here to solve our DP",01:14:16.460,01:14:21.310
"is, of course, to
write our recursion",01:14:21.310,01:14:23.830
"and to convince ourselves
that this actually all",01:14:23.830,01:14:25.830
"works out, and let's do that.",01:14:25.830,01:14:28.950
"And so what we have
here is our DP guessing.",01:14:35.290,01:14:41.700
"And we're going to
try each request",01:14:45.520,01:14:51.530
"i as a plausible first request,
and so that's where this works.",01:14:51.530,01:15:03.060
"You might be thinking,
boy, I mean, this R of fi",01:15:03.060,01:15:06.000
looks a little strange.,01:15:06.000,01:15:07.450
"Why doesn't it include
all of the requests that",01:15:07.450,01:15:10.230
"are compatible with
the i-th request?",01:15:10.230,01:15:15.050
"I mean, I'm somehow shrinking
my subsequent problem size",01:15:15.050,01:15:19.590
"if I'm ignoring
some requests that",01:15:19.590,01:15:22.165
"are earlier that really
should be part of--",01:15:22.165,01:15:25.380
"or are part of the
compatible set,",01:15:25.380,01:15:27.610
"but they're not part
of the R of fi set.",01:15:27.610,01:15:30.380
"And so some of you
may be thinking that,",01:15:30.380,01:15:32.230
"well, the reason this
is going to work out",01:15:32.230,01:15:35.700
"is because we are
going to construct",01:15:35.700,01:15:38.160
"our solution, as I said before,
from the beginning to the end.",01:15:38.160,01:15:42.900
"So we're going to
try each request",01:15:42.900,01:15:45.330
as a plausible first request.,01:15:45.330,01:15:48.370
"So even though this request
might be in our chart",01:15:48.370,01:15:51.840
"all the way to the right,
it might have a huge weight,",01:15:51.840,01:15:56.290
"and so I'm going to have to try
that out as my first selection.",01:15:56.290,01:16:01.360
"And when I try that out
as my first selection,",01:16:01.360,01:16:03.780
"then the definition
of my subproblem",01:16:03.780,01:16:05.760
says that this will work.,01:16:05.760,01:16:07.246
"I only have to look
at the request that",01:16:07.246,01:16:08.870
"comes later than that because
the ones that came the earlier,",01:16:08.870,01:16:11.900
I've tried them out too.,01:16:11.900,01:16:14.220
"So that's something that you
need to keep in mind in order",01:16:14.220,01:16:17.750
"to argue correctness
of this recursion",01:16:17.750,01:16:21.390
that I'm going to write out now.,01:16:21.390,01:16:23.760
"And so the recursion, and I have
opt R, what is the first thing",01:16:23.760,01:16:31.270
"that I'm going to have
on the right-hand side",01:16:31.270,01:16:33.520
of this recursive formulation?,01:16:33.520,01:16:36.950
"What mathematical construct
am I going to have to do here?",01:16:36.950,01:16:41.320
"And you see something like
guessing and seeing something",01:16:41.320,01:16:43.800
"like try each request as
a possible first, what",01:16:43.800,01:16:46.810
"mathematical construct am I
going to have to put up here?",01:16:46.810,01:16:50.010
AUDIENCE: Max.,01:16:50.010,01:16:50.930
"SRINIVAS DEVADAS:
Max, who said max?",01:16:50.930,01:16:54.470
"No one wants to
take credit for max?",01:16:54.470,01:16:57.910
"It's max, right?",01:16:57.910,01:16:59.450
"So I'm going to have max 1
less than equal to i less than",01:16:59.450,01:17:06.480
or equal to n.,01:17:06.480,01:17:08.740
"And I'm going to-- does
someone want to tell me what",01:17:08.740,01:17:12.770
the rest of this looks like?,01:17:12.770,01:17:14.210
Someone else?,01:17:17.780,01:17:19.706
"A couple Frisbees left, guys.",01:17:19.706,01:17:21.460
[LAUGHTER],01:17:21.460,01:17:22.565
"What does the rest
of this look like?",01:17:22.565,01:17:24.106
Yep?,01:17:28.170,01:17:28.670
"AUDIENCE: 1 plus
the optimal R f of--",01:17:28.670,01:17:31.323
"SRINIVAS DEVADAS:
Not 1, just what kind",01:17:31.323,01:17:34.630
of problem do we have here?,01:17:34.630,01:17:36.670
It's not 1 anymore.,01:17:36.670,01:17:37.925
AUDIENCE: Oh--,01:17:37.925,01:17:38.509
SRINIVAS DEVADAS: The weight.,01:17:38.509,01:17:39.716
AUDIENCE: Right.,01:17:39.716,01:17:40.520
"SRINIVAS DEVADAS: The
weight, yep, so Wi",01:17:40.520,01:17:44.170
plus the optimal R fi.,01:17:44.170,01:17:50.620
"OK, so we got Wi plus
optimum of R of fi.",01:17:53.700,01:18:00.350
"And you said ""1,"" close enough.",01:18:00.350,01:18:03.560
"If it was 1, you'd use greedy.",01:18:03.560,01:18:05.580
"And so that's why we
were in that Wi mode,",01:18:05.580,01:18:07.840
and we end up getting this here.,01:18:07.840,01:18:09.520
So that's it.,01:18:09.520,01:18:10.350
"You try every request
as a possible first.",01:18:10.350,01:18:13.114
"Obviously, you pick
that request so it's",01:18:13.114,01:18:14.780
"part of your weight in terms of
the weight for your solution.",01:18:14.780,01:18:20.580
"When you do that, because
it was the first request,",01:18:20.580,01:18:23.370
"you get to prune
the set of requests",01:18:23.370,01:18:25.640
"that come later corresponding
to R of fi that you see here.",01:18:25.640,01:18:31.290
"And then you go
ahead and simply find",01:18:31.290,01:18:36.060
"the optimum for a
smaller problem,",01:18:36.060,01:18:38.920
clearly has fewer requests.,01:18:38.920,01:18:40.610
"And as long as you maximize
over the set of guesses",01:18:40.610,01:18:45.920
"that you've taken, and there's
n guesses up at the top level.",01:18:45.920,01:18:49.980
"Obviously in the
lower levels, you're",01:18:49.980,01:18:51.670
"going to have fewer requests
in your R of fi's, and you'll",01:18:51.670,01:18:55.050
"have fewer durations of the max,
but it's n at the top level.",01:18:55.050,01:19:03.270
"So one last question,
what is the complexity",01:19:03.270,01:19:08.900
of what we see here?,01:19:08.900,01:19:12.184
AUDIENCE: n square.,01:19:12.184,01:19:13.510
"SRINIVAS DEVADAS: n square, and
the reason it's n square is you",01:19:13.510,01:19:16.600
"simply use-- you can be
really mechanical about this--",01:19:16.600,01:19:19.610
"you say, if this was order 1,
I'm doing a max over n items.",01:19:19.610,01:19:25.440
"And therefore, that's order n
time to solve one subproblem.",01:19:25.440,01:19:29.570
"And since I have n subproblems,
I get n times order in,",01:19:29.570,01:19:36.650
which is order n squared.,01:19:36.650,01:19:40.390
"So the last thing I'll do-- and
I just have one more minute--",01:19:40.390,01:19:45.310
"is give you a sense of a small
change to interval scheduling",01:19:45.310,01:19:52.740
"that puts us in that
NP complete domain.",01:19:52.740,01:19:56.940
"So so far, we've just
done two problems.",01:19:56.940,01:19:59.360
There's many others.,01:19:59.360,01:20:00.275
We did interval scheduling.,01:20:00.275,01:20:01.400
There was greedy linear time.,01:20:01.400,01:20:03.630
"Weighted interval
scheduling is order n",01:20:03.630,01:20:05.880
"squared according to this
particular DP formulation.",01:20:05.880,01:20:08.880
"It turns out there's a
smarter DP formulation that",01:20:08.880,01:20:13.620
"runs an order n log
n time that you'll",01:20:13.620,01:20:16.900
"hear about in section on Friday,
but it's still polynomial time.",01:20:16.900,01:20:22.500
"Let's make one reasonable
change to this,",01:20:22.500,01:20:26.880
"which is to say that we may
have multiple resources,",01:20:26.880,01:20:31.520
and they may be non identical.,01:20:31.520,01:20:34.120
"So it turns out everything that
we've done kind of extrapolates",01:20:34.120,01:20:38.140
"very well to identical
machines, even though there's",01:20:38.140,01:20:43.580
many identical machines.,01:20:43.580,01:20:45.710
"But if you have
non-identical machines, what",01:20:45.710,01:20:48.180
"that means is you have
resources or machines",01:20:48.180,01:20:53.350
that have different types.,01:20:53.350,01:20:55.510
"So maybe your
machines are T1 to Tm.",01:20:55.510,01:21:02.190
"And it's essentially
a situation where",01:21:02.190,01:21:06.670
"you say, this
particular task can only",01:21:06.670,01:21:09.660
"be run on this machine
or this other machines,",01:21:09.660,01:21:12.370
some subset of machines.,01:21:12.370,01:21:14.650
"So you can still have a
weight of 1 for all requests,",01:21:14.650,01:21:22.670
"but you have something like
A of i belonging subset of T",01:21:22.670,01:21:30.670
"is a set of machines
that i runs on.",01:21:30.670,01:21:36.730
"OK, that's it.",01:21:40.280,01:21:42.020
That's the change we make.,01:21:42.020,01:21:43.970
"Q of i is going to be
specified for each of the i's.",01:21:43.970,01:21:49.350
"So you could even
have two machines.",01:21:49.350,01:21:51.470
"And you could say, here's
a set of requests that",01:21:51.470,01:21:53.470
could run on both machines.,01:21:53.470,01:21:55.210
"Here's a set that only
runs on the first machine,",01:21:55.210,01:21:57.600
"and here's another set that
runs on the second machine.",01:21:57.600,01:22:00.630
"That's a simple example
of this generalization.",01:22:00.630,01:22:04.790
"If you do this, this problem has
been shown to be NP complete.",01:22:04.790,01:22:13.280
"And by that I mean, NP complete
problems are decision problems.",01:22:13.280,01:22:17.690
"And so you say, can some
specific number k less",01:22:17.690,01:22:24.100
than and requests be scheduled.,01:22:24.100,01:22:26.875
"This decision problem
is NP complete.",01:22:31.250,01:22:35.669
"And so what happens when you
have NP complete problems?",01:22:35.669,01:22:37.960
"Well, we're going to have a
little module in the class that",01:22:37.960,01:22:40.418
deals with intractability.,01:22:40.418,01:22:41.940
"We're going to
look at cases where",01:22:41.940,01:22:44.290
"we could apply
approximation algorithms,",01:22:44.290,01:22:46.430
"and maybe in the case of
the optimization problem,",01:22:46.430,01:22:50.610
"if the optimum for
this is k star,",01:22:50.610,01:22:54.270
"I will say that we can
get within 10% of k star.",01:22:54.270,01:22:57.800
"The other way is to just
deal with intractability",01:22:57.800,01:23:00.520
"by hoping that your
exponential time",01:23:00.520,01:23:03.410
"algorithm runs in a
reasonable amount of time",01:23:03.410,01:23:06.640
for common cases.,01:23:06.640,01:23:08.790
"So in the worst case, you might
end up taking a long time.",01:23:08.790,01:23:13.110
"But you just sort of
back off after an hour",01:23:13.110,01:23:15.400
"and take what you get from
the operative algorithm.",01:23:15.400,01:23:19.070
"But in many cases, the algorithm
might actually complete,",01:23:19.070,01:23:23.840
"and they give you
the optimum solution.",01:23:23.840,01:23:26.760
So done here.,01:23:26.760,01:23:28.270
"Make sure to sign up for
a recitation section.",01:23:28.270,01:23:31.490
And see you guys next time.,01:23:31.490,01:23:33.616
