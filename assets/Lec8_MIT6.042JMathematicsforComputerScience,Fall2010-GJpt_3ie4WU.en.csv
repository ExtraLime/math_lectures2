text,start,stop
"The following content is
provided under a Creative",00:00:00.500,00:00:02.830
Commons license.,00:00:02.830,00:00:04.340
"Your support will help
MIT OpenCourseWare",00:00:04.340,00:00:06.680
"continue to offer high quality
educational resources for free.",00:00:06.680,00:00:11.050
"To make a donation or
view additional materials",00:00:11.050,00:00:13.670
"from hundreds of MIT courses,
visit MIT OpenCourseWare",00:00:13.670,00:00:17.558
at ocw.mit.edu.,00:00:17.558,00:00:18.183
"PROFESSOR: So
welcome to this week.",00:00:23.780,00:00:26.300
"We're going to talk
about trees mainly.",00:00:26.300,00:00:29.190
"We're going to talk about
some very special ones,",00:00:29.190,00:00:31.640
spanning trees.,00:00:31.640,00:00:33.770
"But before we do
this, you will go",00:00:33.770,00:00:35.770
"through a whole
bunch of definitions",00:00:35.770,00:00:37.690
"and look at examples to
explain how it works.",00:00:37.690,00:00:41.070
"So let's talk about
walks and paths.",00:00:45.910,00:00:48.365
"So you've already seen
a bit of graph theory.",00:00:54.290,00:00:58.450
"We've talked about graph
colorings and so on.",00:00:58.450,00:01:03.000
"But now we're going to talk
about special types of graphs,",00:01:03.000,00:01:06.560
"and special structures
within such graphs.",00:01:06.560,00:01:08.960
"Well, let's start with
the first definition.",00:01:12.438,00:01:15.510
How do we define a walk?,00:01:15.510,00:01:16.797
"Well, a walk is
something very simple.",00:01:16.797,00:01:18.380
"You walk from one vertex
in the graph over an edge",00:01:18.380,00:01:23.250
"to a next vertex, to a
next vertex, and so on.",00:01:23.250,00:01:26.740
So how do we define this?,00:01:26.740,00:01:29.370
"A walk is a sequence of vertices
that are connected by edges.",00:01:29.370,00:01:47.920
"So for example, we
may have something",00:01:47.920,00:01:50.910
that looks like a first vertex.,00:01:50.910,00:01:53.470
That we call the start.,00:01:53.470,00:01:55.520
"And an edge that goes
to a second vertex.",00:01:55.520,00:02:00.760
"We continue like
this until the end,",00:02:00.760,00:02:02.860
"say, at vk, which we
call the end of the walk.",00:02:02.860,00:02:07.520
"And if you look at
this, we say this",00:02:07.520,00:02:11.370
"is a walk from v0
all the way to vk.",00:02:11.370,00:02:13.900
It has exactly k edges.,00:02:13.900,00:02:16.250
"And we say that the length
is actually equal to k.",00:02:16.250,00:02:23.130
So this is a very basic notion.,00:02:23.130,00:02:26.570
"And what we are
really interested in",00:02:26.570,00:02:28.660
is actually paths.,00:02:28.660,00:02:31.770
"And paths are special
types of walks",00:02:31.770,00:02:35.620
"in which all those
vertices are actually",00:02:35.620,00:02:38.700
different from one another.,00:02:38.700,00:02:40.700
"But let's first give
an example of a graph",00:02:40.700,00:02:44.530
"that you will study throughout
the whole lecture, especially",00:02:44.530,00:02:47.030
when we come to spanning trees.,00:02:47.030,00:02:48.390
"So let's have a look
at the following graph.",00:02:50.860,00:02:55.070
So let this be a graph.,00:03:14.290,00:03:15.840
"And for example, we
can have a walk that",00:03:15.840,00:03:18.400
goes from this particular edge.,00:03:18.400,00:03:23.890
Say we call this v0.,00:03:23.890,00:03:27.060
"It goes over this
edge over here.",00:03:27.060,00:03:29.640
Suppose I want to end over here.,00:03:29.640,00:03:32.610
"Well, I can go many ways
in this particular one.",00:03:32.610,00:03:35.030
I can go for this edge.,00:03:35.030,00:03:36.435
I may go over here.,00:03:36.435,00:03:38.670
"I may go all the way
to this part over here.",00:03:38.670,00:03:41.040
I may return if I want to.,00:03:41.040,00:03:42.760
"And I finally, I take this
edge for example back to--",00:03:42.760,00:03:47.010
"over this edge, I will
end in the last vertex vk.",00:03:47.010,00:03:51.490
"So what we notice
here is that we",00:03:51.490,00:03:53.566
"have a walk that actually gets
to this particular vertex,",00:03:53.566,00:03:58.690
and then returns to this vertex.,00:03:58.690,00:04:01.370
"So for a few other edges, and
then goes all the way to vk.",00:04:01.370,00:04:05.470
"So if you talk about
the path, then we really",00:04:05.470,00:04:08.370
"want all the difference
vertices not to occur twice.",00:04:08.370,00:04:12.920
"So let's define this
so the destination is",00:04:12.920,00:04:17.610
that a path is actually a walk.,00:04:17.610,00:04:20.500
"Is a walk where all
edges, where all vertices,",00:04:24.580,00:04:33.380
"vi's, are different.",00:04:33.380,00:04:35.505
"In this particular
case-- well for example,",00:04:40.790,00:04:43.490
"if you strip off
this part over here,",00:04:43.490,00:04:45.810
"you will get a path from v0
to here, to here, to here.",00:04:45.810,00:04:49.950
"And all these vertices
on the path on this walk",00:04:49.950,00:04:54.450
are different.,00:04:54.450,00:04:55.220
And therefore it is a path.,00:04:55.220,00:04:58.130
This also shows us something.,00:04:58.130,00:05:00.830
"It is possible to construct
from a walk a path.",00:05:00.830,00:05:05.140
"As you can see, we started
off with this particular walk.",00:05:05.140,00:05:08.560
"And we just deleted,
essentially,",00:05:08.560,00:05:12.560
"a part where we sort of came
back to the same vertex again.",00:05:12.560,00:05:17.630
"And when we delete all
those kinds of parts,",00:05:17.630,00:05:21.230
you will end up with a path.,00:05:21.230,00:05:22.530
"So can we formalize this
a little bit better?",00:05:22.530,00:05:25.660
Then we get the next lemma.,00:05:25.660,00:05:27.350
I call this lemma one.,00:05:31.060,00:05:34.630
"And let's see whether
we can prove this.",00:05:34.630,00:05:36.700
"So we want to show that if
there exists a walk from, say,",00:05:36.700,00:05:42.970
"a vertex u to-- well, maybe
I should not use arrows.",00:05:42.970,00:05:49.900
"That's confusing--
from u to v. Then there",00:05:49.900,00:05:57.210
also exists a path from u to v.,00:05:57.210,00:06:06.140
So how can we prove this?,00:06:06.140,00:06:07.410
Do you have any ideas?,00:06:07.410,00:06:09.590
"So what kind of proof
techniques can we use here?",00:06:09.590,00:06:15.190
"And maybe one of the
principles that we have seen?",00:06:15.190,00:06:21.396
"AUDIENCE: [INAUDIBLE]
but I have an idea",00:06:21.396,00:06:26.808
about how you could show this.,00:06:26.808,00:06:28.284
"It's basically if you
visit one vertex-- let's",00:06:28.284,00:06:32.600
"you go 1, 2, 3, 4, 5, 3, 6.",00:06:32.600,00:06:38.650
You can walk from 1 to 6.,00:06:38.650,00:06:42.132
"Then we just take out the
4, you just go 1, 2, 3, 6.",00:06:42.132,00:06:46.732
PROFESSOR: Right.,00:06:46.732,00:06:47.440
So what did we do there?,00:06:47.440,00:06:48.520
We essentially had a walk.,00:06:48.520,00:06:49.760
"And then we cut out
a smaller parts here",00:06:49.760,00:06:52.250
that recurs in a sense.,00:06:52.250,00:06:54.480
"And we have shortened the path,
we have shortened the walk",00:06:54.480,00:06:59.060
to a smaller path.,00:06:59.060,00:07:00.950
"So what we've used here
is we can sort of take out",00:07:00.950,00:07:06.720
"parts of the walk just
like we did over here",00:07:06.720,00:07:09.850
"until the walk gets shorter,
and shorter, and shorter.",00:07:09.850,00:07:13.440
"So maybe one of the things
that we may consider",00:07:13.440,00:07:16.420
is a walk of shortest length.,00:07:16.420,00:07:19.425
"And we know that
this is possible.",00:07:22.980,00:07:27.860
"Oops, sorry about that.",00:07:27.860,00:07:28.991
So let's prove this.,00:07:34.770,00:07:36.470
"So for example, suppose there
exists such a walk from u",00:07:36.470,00:07:42.930
"to v. Then we know by
the ordering principle",00:07:42.930,00:07:47.030
"that there exists a
walk of minimum length.",00:07:47.030,00:07:49.900
"So that's what we're
going to use here.",00:07:49.900,00:07:51.960
"And then we're going
to essentially go",00:07:51.960,00:07:56.000
"in the same direction as
what you were talking about",00:07:56.000,00:07:58.580
"because we're going to show
that it's not possible to delete",00:07:58.580,00:08:02.510
anything more.,00:08:02.510,00:08:04.804
"Because otherwise,
if you could do that,",00:08:04.804,00:08:06.470
the walk would get shorter.,00:08:06.470,00:08:07.594
"And that's not possible, because
by the well ordering principle,",00:08:07.594,00:08:13.010
"we simply consider that there
exists a walk of minimal length",00:08:13.010,00:08:22.580
that we are interested in.,00:08:22.580,00:08:23.990
"We will show that this
particular walk is actually",00:08:30.440,00:08:32.940
going to be a path.,00:08:32.940,00:08:34.630
So let's see how we can do this.,00:08:34.630,00:08:36.950
"So let's do walk be equal
to-- well, it starts in v0.",00:08:36.950,00:08:41.770
It's equal to u.,00:08:41.770,00:08:43.450
"There's an edge to, say, v1.",00:08:43.450,00:08:45.200
"It goes all the way up to vk,
which is the last vertex, v.",00:08:45.200,00:08:53.160
So what are we going to prove?,00:08:53.160,00:08:54.410
"We're going to prove that
this is actually a path.",00:08:54.410,00:08:57.140
"And since this is a
walk of minimal length,",00:08:57.140,00:09:00.790
well suppose it is not a path.,00:09:00.790,00:09:04.200
"So we are going to
use contradiction.",00:09:04.200,00:09:05.980
"Well if it's not a path, then
by our definitions over here,",00:09:08.795,00:09:13.030
"there must be two
vertices that are actually",00:09:13.030,00:09:14.950
"the same, just like in here.",00:09:14.950,00:09:17.170
"So we go from v0 to, say, this
particular vertex, or this one.",00:09:17.170,00:09:22.270
"And then we come
back to this one,",00:09:22.270,00:09:23.900
and then all the way to vk.,00:09:23.900,00:09:25.220
"So if it is not a
path, then two of those",00:09:25.220,00:09:29.950
must be equal to one another.,00:09:29.950,00:09:32.150
"And then we are going
to use this trick.",00:09:32.150,00:09:34.520
"We're going to
take out this part.",00:09:34.520,00:09:36.000
We get the shorter walk.,00:09:36.000,00:09:38.070
"But that contradicts that
our walk is minimal length.",00:09:38.070,00:09:42.660
"So that's sort of the proof
technique that we're doing.",00:09:42.660,00:09:45.470
OK.,00:09:45.470,00:09:45.970
Let's do this.,00:09:45.970,00:09:46.970
"So first, let's
consider a few cases.",00:09:52.140,00:09:57.640
"If k equals 0, then
that's pretty obvious.",00:09:57.640,00:10:01.400
"We have only a single vertex u
that is connected by a 0 length",00:10:01.400,00:10:05.640
path to itself.,00:10:05.640,00:10:07.500
So this is fine.,00:10:07.500,00:10:09.230
"For k equals 1, we have
just a single edge.",00:10:09.230,00:10:13.020
And then we're done too.,00:10:13.020,00:10:14.020
That's a path as well.,00:10:14.020,00:10:15.830
"So let's consider the case
where k is at least two.",00:10:15.830,00:10:22.230
"Well, suppose it's a walk.",00:10:22.230,00:10:23.874
It's not a path.,00:10:23.874,00:10:24.540
"So we are going to
assume the opposite.",00:10:24.540,00:10:28.695
"If it's not a path,
then we concluded",00:10:34.310,00:10:38.340
"that two of those vi's must
be equal to one another.",00:10:38.340,00:10:42.330
"So there exits an i unequal to
j such that vertex vi equals vj.",00:10:42.330,00:10:51.208
"Ah, but now we have
a walk that goes",00:10:51.208,00:10:55.800
"from v0 all the way to, say,
vi, which is equal to vj.",00:10:55.800,00:11:02.280
"And then we go all the way
up to vk which is equal to v.",00:11:02.280,00:11:06.480
"So essentially, we have
created a shorter walk.",00:11:06.480,00:11:09.420
"We have taken out this
little triangle over here.",00:11:09.420,00:11:11.930
Now this is a shorter walk.,00:11:17.260,00:11:20.920
"And this contradicts our
assumption of minimality.",00:11:20.920,00:11:27.170
"So that means that our
assumption over here",00:11:30.250,00:11:33.650
is not true.,00:11:33.650,00:11:35.740
So the walk is actually a path.,00:11:35.740,00:11:38.350
So this concludes the proof.,00:11:38.350,00:11:40.010
"So even though this
lemma is pretty",00:11:44.470,00:11:46.300
"straightforward in
the sense that we all",00:11:46.300,00:11:48.010
"feel that if you have a walk,
then you can create a path,",00:11:48.010,00:11:52.010
"if you really want to write it
down with all the principles",00:11:52.010,00:11:54.750
"that we have been
taught, you can see",00:11:54.750,00:11:57.594
a few things appearing here.,00:11:57.594,00:11:58.760
"So we first started with
the well ordering principle.",00:11:58.760,00:12:01.170
"And also we used the method
of contradiction in our proof.",00:12:01.170,00:12:07.620
"So let's set talk about
the next definition.",00:12:07.620,00:12:09.910
"So we talked about
walks and paths.",00:12:09.910,00:12:12.180
Let's talk about connectivity.,00:12:12.180,00:12:13.430
"We actually defined
two vertices, u and v",00:12:21.460,00:12:25.430
"to be connected if
there is a path that",00:12:25.430,00:12:29.710
"connects u to v. So
u and v are connected",00:12:29.710,00:12:39.160
if there is a path from u to v.,00:12:39.160,00:12:49.680
"And now we can talk about the
graphs that are connected.",00:12:49.680,00:12:54.540
That's a very important concept.,00:12:54.540,00:12:57.090
"A graph is connected if every
pair of vertices is connected.",00:12:57.090,00:13:14.480
"So when every pair of vertices
in the graph are connected.",00:13:14.480,00:13:25.490
"So an example is the particular
graph on the blackboard.",00:13:25.490,00:13:32.130
"You can see here that
there's always a path",00:13:32.130,00:13:34.720
"to be found from this vertex,
to this one, or to that one,",00:13:34.720,00:13:38.210
"to this. to that,
to this, or that.",00:13:38.210,00:13:42.140
"You can do this for
any two vertices.",00:13:42.140,00:13:45.420
So this is a connected graph.,00:13:45.420,00:13:47.130
"A graph that is not
connected looks something",00:13:47.130,00:13:50.500
like this for example.,00:13:50.500,00:13:54.560
"You may have a single
edge plus, say,",00:13:54.560,00:13:58.980
"another triangle,
maybe with another edge",00:13:58.980,00:14:02.532
or something like that.,00:14:02.532,00:14:03.490
"So they are disconnected
from this vertex.",00:14:03.490,00:14:06.780
"I do not have a
graph that connects",00:14:06.780,00:14:08.690
to this vertex over here.,00:14:08.690,00:14:12.080
So this is about connectivity.,00:14:12.080,00:14:15.640
"And now we can start talking
about cycles and closed walks.",00:14:15.640,00:14:22.730
"Together, these concepts
will help us to define trees.",00:14:30.170,00:14:34.686
"And then we can start
talking about this very",00:14:34.686,00:14:36.560
"special concept, spanning trees.",00:14:36.560,00:14:38.320
So let's see how that works.,00:14:40.980,00:14:42.280
So cycles and closed walks.,00:14:45.930,00:14:48.300
We first define a closed walk.,00:14:55.110,00:14:58.980
"And once we have done this, we
are able to get into cycles.",00:14:58.980,00:15:04.210
So what's a closed walk?,00:15:04.210,00:15:06.120
"Well, it's actually a walk for
which the start and the end",00:15:06.120,00:15:08.830
vertex are the same.,00:15:08.830,00:15:09.830
"So it starts and ends at
exactly the same vertex.",00:15:15.840,00:15:23.980
"So this is all pretty
straightforward.",00:15:31.770,00:15:33.830
"So we have v0 connected to,
say, v1, all the way up to vk.",00:15:33.830,00:15:39.360
And vk itself is equal to v0.,00:15:39.360,00:15:42.650
"So you have a walk
that goes all the way",00:15:42.650,00:15:44.790
from v0 all the way back to vk.,00:15:44.790,00:15:47.420
"For example, in this graph, you
could have walked all the way",00:15:47.420,00:15:53.020
back to v0.,00:15:53.020,00:15:54.920
You would have a closed walk.,00:15:54.920,00:15:56.820
So what's a cycle?,00:15:56.820,00:15:58.160
"A cycle is a little
bit more special",00:15:58.160,00:16:01.000
"in which all these
vertices over here",00:16:01.000,00:16:03.900
"are actually different
from one another.",00:16:03.900,00:16:06.600
"So if k is at least
three-- so the walk",00:16:06.600,00:16:11.240
"is not just a simple edge,
or just a single vertex.",00:16:11.240,00:16:14.940
"And if all v0, v1, all the way
up to vk minus 1 are different,",00:16:17.790,00:16:29.340
"then we are saying
that we have a cycle.",00:16:29.340,00:16:36.900
Then it is called a cycle.,00:16:36.900,00:16:39.060
"So these two concepts,
connectivity and cycles,",00:16:45.250,00:16:48.240
will help us to define trees.,00:16:48.240,00:16:49.485
So what are trees?,00:16:55.410,00:16:57.630
"A simple example
is something that",00:16:57.630,00:16:59.580
"looks like this, for example.",00:16:59.580,00:17:02.570
"The idea is that a
tree is both connected.",00:17:09.980,00:17:13.530
And it has no cycles.,00:17:13.530,00:17:15.630
"So in this case, we can see
that every vertex it's connected",00:17:15.630,00:17:19.760
to every other vertex.,00:17:19.760,00:17:21.310
"But there is no cycle like
a triangle or something",00:17:21.310,00:17:24.359
that is connected all around.,00:17:24.359,00:17:27.220
So let's define this properly.,00:17:27.220,00:17:30.920
"A definition is that a
connected and acyclic graph",00:17:30.920,00:17:43.690
is called a tree.,00:17:43.690,00:17:44.720
"And within trees, we also
have something very special",00:17:51.230,00:17:53.870
that we call leaves.,00:17:53.870,00:17:55.520
"And leaves are exactly those
nodes that have degree one.",00:17:55.520,00:17:59.600
"So for example, this
node has degree one.",00:17:59.600,00:18:01.740
"It has only this
edge connected to it.",00:18:01.740,00:18:04.290
So this is called a leaf.,00:18:04.290,00:18:06.840
"This one also is a leaf
because it has just one edge",00:18:06.840,00:18:10.964
connected to it.,00:18:10.964,00:18:11.630
"But this lead over
here has three edges.",00:18:11.630,00:18:14.290
So it has degree three.,00:18:14.290,00:18:16.140
This one has degree four.,00:18:16.140,00:18:17.830
This is the leaf again.,00:18:17.830,00:18:18.850
"This one is a leaf,
this one, and this one.",00:18:18.850,00:18:23.130
"So this is very
important concept.",00:18:23.130,00:18:25.230
"We often use leaves
in our proofs.",00:18:25.230,00:18:27.920
And we will get to one.,00:18:27.920,00:18:30.510
"So a lead is a node with
degree one in a tree.",00:18:30.510,00:18:45.620
OK great.,00:18:49.810,00:18:50.640
"So now let's have
a look at trees.",00:18:54.020,00:18:56.470
"Suppose I'm looking at
a subgraph of a tree.",00:18:56.470,00:19:00.410
"What can we say
about a subgraph?",00:19:00.410,00:19:02.947
"What kind of structure
does this have?",00:19:02.947,00:19:04.530
"So suppose for example I want to
take some connected subgraphs.",00:19:04.530,00:19:10.310
"So that's what I'm
actually interested in.",00:19:10.310,00:19:12.060
"So for example, I
take this-- suppose",00:19:12.060,00:19:15.400
I take this connected subgraph.,00:19:15.400,00:19:18.170
Then what does it look like?,00:19:18.170,00:19:21.150
"Do we see some
structure in this?",00:19:21.150,00:19:23.460
It's-- no?,00:19:27.890,00:19:29.420
AUDIENCE: It's a tree.,00:19:29.420,00:19:30.620
"PROFESSOR: Yeah, it's a three.",00:19:30.620,00:19:31.990
"So are we able to
prove this also?",00:19:31.990,00:19:34.710
"So this lemma you
actually lose later on.",00:19:37.140,00:19:42.060
"So any connected subgraph
of the tree is a tree.",00:19:42.060,00:19:54.940
"And to prove-- well, how
can we start out a proof?",00:19:57.770,00:20:02.440
Any suggestions?,00:20:02.440,00:20:04.750
So let's have a look here.,00:20:04.750,00:20:07.280
So how may I think about this?,00:20:07.280,00:20:08.960
"Well, I may take a
connected subgraph,",00:20:08.960,00:20:12.300
"and I want to show--
of a tree- and I",00:20:12.300,00:20:14.596
want show that it is a tree.,00:20:14.596,00:20:16.880
"A general method could
be, for example, to--",00:20:16.880,00:20:21.144
"AUDIENCE: [INAUDIBLE]
You know, one",00:20:21.144,00:20:23.736
"of the things, one
of the conditions",00:20:23.736,00:20:25.518
is it has to be acyclical.,00:20:25.518,00:20:28.434
"So since you're not adding
nodes and you're not",00:20:28.434,00:20:31.836
"starting within cycles, you
can't create a new cycle.",00:20:31.836,00:20:35.794
PROFESSOR: Yeah.,00:20:35.794,00:20:36.460
"I think you're saying
something like,",00:20:36.460,00:20:38.840
"if I have a connected
subgraph, which",00:20:38.840,00:20:41.480
"is like a smaller
part of the tree--",00:20:41.480,00:20:44.979
"now suppose that
would not be a tree.",00:20:44.979,00:20:46.520
Say it would have a cycle.,00:20:46.520,00:20:48.450
"Then that cycle would also be
present in the tree itself.",00:20:48.450,00:20:51.840
"And that's not really possible
because a tree has no cycles.",00:20:51.840,00:20:56.020
"So that's sort of indeed
how the proof goes.",00:20:56.020,00:20:59.440
"So we essentially
use contradiction.",00:20:59.440,00:21:02.550
"So let's suppose that this
connected subgraph is actually",00:21:07.630,00:21:13.830
not a tree.,00:21:13.830,00:21:14.470
"So suppose it's a
connected subgraph.",00:21:24.160,00:21:25.980
It's not a tree.,00:21:25.980,00:21:28.040
"Well then, in that case,
it must have a cycle,",00:21:28.040,00:21:31.690
"because a tree is something
that is both connected",00:21:31.690,00:21:35.110
and has a cycle and is acyclic.,00:21:35.110,00:21:38.850
"We have a connected subgraph,
which is not a tree.",00:21:38.850,00:21:41.590
So it must have a cycle.,00:21:41.590,00:21:42.870
So it has a cycle.,00:21:45.380,00:21:48.480
"But now since it is a
subgraph of the bigger graph,",00:21:48.480,00:21:52.400
"we know that the cycle must
also be in the whole graph.",00:21:52.400,00:21:55.780
"So the whole graph has
this particular cycle.",00:21:55.780,00:22:07.190
Wait a minute.,00:22:07.190,00:22:09.620
The whole graph is the tree.,00:22:09.620,00:22:13.420
And a tree's acyclic.,00:22:13.420,00:22:15.130
So we get a contradiction.,00:22:15.130,00:22:17.280
"So that means that our original
assumption that it's not a tree",00:22:17.280,00:22:20.610
is wrong.,00:22:20.610,00:22:21.890
So it is a tree.,00:22:21.890,00:22:23.580
"So this is, again, such a
general kind of proof method",00:22:23.580,00:22:27.725
that we repeatedly use here.,00:22:27.725,00:22:30.520
"So this lemma, which
we will call two,",00:22:30.520,00:22:35.380
"we will use in the
next proof where",00:22:35.380,00:22:37.820
"we're going to talk about the
relationship between vertices",00:22:37.820,00:22:40.970
and edges within trees.,00:22:40.970,00:22:44.040
"It's a very beautiful
relationship.",00:22:55.980,00:22:59.450
"The lemma states if you have
a tree that has n vertices,",00:22:59.450,00:23:05.150
"then it must have
n minus 1 edges.",00:23:05.150,00:23:07.840
"So this is a very tight
relationship here.",00:23:07.840,00:23:11.110
"So a tree with n vertices
has n minus 1 edges.",00:23:11.110,00:23:23.070
So let's see.,00:23:23.070,00:23:23.860
How can we prove this one?,00:23:23.860,00:23:26.930
Any suggestions?,00:23:26.930,00:23:27.770
"So what did we use at the
beginning of the course here?",00:23:27.770,00:23:32.600
So we have n vertices.,00:23:32.600,00:23:35.040
"And we want to show that
it has n minus 1 edges.",00:23:35.040,00:23:39.020
"We can use induction, right?",00:23:42.980,00:23:45.670
So let's use induction.,00:23:45.670,00:23:50.350
on n.,00:23:50.350,00:23:51.720
"So how do we proceed
if you do this?",00:23:51.720,00:23:54.280
"Well, we always start out
with an induction hypothesis.",00:23:54.280,00:23:58.920
"So the statement here
would be something",00:23:58.920,00:24:00.640
"like, well, there are n minus
1 edges in any n vertex tree.",00:24:00.640,00:24:15.380
"And if you start with
induction, you always",00:24:18.480,00:24:20.950
"start with the base case, right?",00:24:20.950,00:24:22.580
So we have the base case.,00:24:22.580,00:24:25.930
So how does this work?,00:24:25.930,00:24:28.540
"So for example, we
want to consider P1.",00:24:28.540,00:24:33.090
"So there are zero edges
in any one vertex tree.",00:24:33.090,00:24:37.069
"Well, that's true, right?",00:24:37.069,00:24:38.110
"If I have just one
vertex, there's no edge.",00:24:38.110,00:24:41.390
So this is definitely correct.,00:24:41.390,00:24:45.630
So that's easy.,00:24:45.630,00:24:46.930
"So let's prove the other part,
which is the inductive step.",00:24:46.930,00:24:53.900
And the inductive step is--,00:24:53.900,00:25:02.306
"So to do the inductive step, we
are going to always assume Pn.",00:25:04.770,00:25:11.270
"And then we want
to prove Pn plus 1.",00:25:11.270,00:25:14.530
So let's do this.,00:25:14.530,00:25:16.060
So we have the inductive step.,00:25:16.060,00:25:17.390
"And we always start
out the same way.",00:25:22.740,00:25:24.780
So we suppose P of n.,00:25:24.780,00:25:32.850
"And now we want to
prove Pn plus 1.",00:25:32.850,00:25:34.960
So how do we do this?,00:25:34.960,00:25:37.350
"Well, take a tree that has
n plus 1 vertices vertices.",00:25:37.350,00:25:40.910
"And we want to show
that it has n edges.",00:25:40.910,00:25:44.390
So take any such tree.,00:25:44.390,00:25:47.680
"So let T be a tree that
has n plus 1 vertices.",00:25:47.680,00:25:56.660
"So how can we use the
induction hypothesis here?",00:26:02.170,00:26:06.880
"So do you have any
ideas over here?",00:26:06.880,00:26:09.360
"So I have a tree with
n plus 1 vertices.",00:26:09.360,00:26:13.100
"And if I want to be able
to use this induction",00:26:13.100,00:26:16.960
"at this induction
hypothesis, then I",00:26:16.960,00:26:19.740
"can only apply it on trees
that have n vertices.",00:26:19.740,00:26:24.125
"So somehow I have to
delete one vertex.",00:26:24.125,00:26:26.960
Right?,00:26:26.960,00:26:28.440
"So what kind of vertex
can I delete in such a way",00:26:28.440,00:26:32.120
that we still have a tree?,00:26:32.120,00:26:34.480
"And I need that because
this induction step can only",00:26:38.730,00:26:44.550
be applied to trees.,00:26:44.550,00:26:47.660
"So what type of vertex can I
remove from a tree and it still",00:26:47.660,00:26:53.060
stays a tree?,00:26:53.060,00:26:54.560
"So for example, if you look
at this example up here,",00:26:54.560,00:26:59.630
"what kind of vertex
can I remove here?",00:26:59.630,00:27:01.540
AUDIENCE: A leaf.,00:27:01.540,00:27:02.326
"PROFESSOR: Yeah, except.",00:27:02.326,00:27:04.230
"I can remove a leaf--
for example, this one.",00:27:04.230,00:27:06.594
And why is that?,00:27:06.594,00:27:07.260
"Because if there's only one
edge connected to the rest",00:27:07.260,00:27:09.790
"of the tree-- so if I delete
it, I will actually keep a tree.",00:27:09.790,00:27:15.420
"So that's how the
proof will continue.",00:27:15.420,00:27:18.070
So we take out one vertex.,00:27:18.070,00:27:21.170
So let v be a leaf of the tree.,00:27:21.170,00:27:25.850
"And let's remove this
particular vertex.",00:27:30.920,00:27:35.970
So what do we get?,00:27:39.230,00:27:41.250
"Well, we again have
a connected subgraph.",00:27:41.250,00:27:47.600
"So this creates a
connected subgraph.",00:27:47.600,00:27:56.540
"And we also know
that this is a tree.",00:27:56.540,00:28:00.740
So how can we conclude that?,00:28:00.740,00:28:02.640
"Well, we had another
lemma somewhere",00:28:02.640,00:28:05.060
that's behind this blackboard.,00:28:05.060,00:28:09.060
"It says that if you
have connected subgraph,",00:28:09.060,00:28:11.555
then we still have a tree.,00:28:11.555,00:28:13.896
So this is great.,00:28:13.896,00:28:15.040
So this is also a tree.,00:28:15.040,00:28:19.380
"So now we can apply Pn
because we have n vertices,",00:28:22.760,00:28:28.290
because we deleted one.,00:28:28.290,00:28:30.140
"So by Pn, we can conclude
that this particular subgraph",00:28:30.140,00:28:36.630
has n minus 1 edges.,00:28:36.630,00:28:40.510
"You simply apply our
statement over here.",00:28:40.510,00:28:43.070
"But we want to say something
about the original tree.",00:28:46.560,00:28:49.960
So how do we do this?,00:28:49.960,00:28:51.680
"Well, we have to somehow
reconstruct this tree.",00:28:51.680,00:28:53.840
"Well, we have deleted v. So
we have to reattach v again.",00:28:53.840,00:28:58.972
So let's do this.,00:28:58.972,00:28:59.680
"So we reattach v.
And if I do this,",00:29:02.630,00:29:08.730
"well, let's look at
this example over here.",00:29:08.730,00:29:11.310
I reattach the leaf.,00:29:11.310,00:29:12.950
I will add one more edge.,00:29:12.950,00:29:16.260
"So if I reattach
this particular leaf,",00:29:16.260,00:29:21.100
"I will get back the
original T over here.",00:29:21.100,00:29:27.100
And how many edges does it have?,00:29:27.100,00:29:30.600
"Well, it has these
n minus 1 edges",00:29:30.600,00:29:35.650
"plus the one edge that is
needed to reattach the leaf.",00:29:35.650,00:29:41.890
"So that's all together
exactly n edges.",00:29:41.890,00:29:46.420
"So now we have shown that for
every n plus 1 vertex tree,",00:29:46.420,00:29:54.430
every such tree has n edges.,00:29:54.430,00:29:57.440
"So now we're done, because
this shows P n plus 1.",00:29:57.440,00:30:02.740
"So this is how the
lemma is proved.",00:30:02.740,00:30:05.105
"And in the homework,
you actually use this.",00:30:05.105,00:30:08.980
"So let's now talk about very
special trees, spanning trees.",00:30:12.300,00:30:17.895
"I think this is a
very exciting topic.",00:30:20.290,00:30:22.760
"So let's look at this
particular graph over here.",00:30:22.760,00:30:27.060
Let's define spanning trees.,00:30:33.330,00:30:35.380
So what's a spanning tree?,00:30:35.380,00:30:36.640
"A spanning tree is a subgraph of
a graph that somehow spans all",00:30:36.640,00:30:42.420
the vertices within this graph.,00:30:42.420,00:30:44.680
"So it's a tree that touches
every single vertex.",00:30:44.680,00:30:49.830
"So for example, we may have--",00:30:49.830,00:30:54.718
"Maybe this is not
such a bright color.",00:30:56.030,00:30:59.690
Maybe this one.,00:30:59.690,00:31:02.460
"So for example, we may have
a tree that looks like this.",00:31:02.460,00:31:07.590
"So in this particular
graph, we can",00:31:16.210,00:31:19.450
"create a subgraph with
the thickened green edges",00:31:19.450,00:31:24.840
"over here, which is a
tree, and also covers",00:31:24.840,00:31:28.480
"all the different vertices
of the original graph.",00:31:28.480,00:31:32.972
"This is actually pretty
amazing that you can do this,",00:31:32.972,00:31:35.180
"you can actually create
such a kind of tree.",00:31:35.180,00:31:40.030
"And what you want to
prove, first of all,",00:31:40.030,00:31:42.950
"is that for every
connected graph,",00:31:42.950,00:31:45.510
"we can construct
such a spanning tree.",00:31:45.510,00:31:47.870
So let's first define this.,00:31:47.870,00:31:49.660
"And then we will
prove this theorem.",00:31:49.660,00:31:52.610
"And then after this, we're going
to talk about weighted graphs.",00:31:56.530,00:32:00.660
"That will lead to minimum
weight spanning trees.",00:32:00.660,00:32:04.772
"And then it gets
really interesting",00:32:04.772,00:32:06.230
"because you want to figure
out how we can actually",00:32:06.230,00:32:08.510
construct those for any graph.,00:32:08.510,00:32:10.710
So let's define a spanning tree.,00:32:15.830,00:32:19.930
A spanning tree--,00:32:19.930,00:32:23.725
"And we appreciate this as
SD-- of a connected graph",00:32:27.140,00:32:40.230
"is actually a subgraph
that is a tree.",00:32:40.230,00:32:51.820
So that's the first condition.,00:32:51.820,00:32:53.900
"And it also covers all
the other vertices.",00:32:53.900,00:32:55.940
"So it has the same
vertices as the graph.",00:32:55.940,00:33:06.725
"And over here, we
have this example.",00:33:13.520,00:33:16.970
"So now what you want to show
is the following theorem",00:33:16.970,00:33:19.960
"that any connected
graph actually",00:33:19.960,00:33:21.940
has such a spanning tree.,00:33:21.940,00:33:24.810
"So the theorem is
every connected graph",00:33:24.810,00:33:43.110
has a spanning tree.,00:33:43.110,00:33:45.760
"And let's think about
a proof together.",00:33:45.760,00:33:52.090
"So for example, we may
start with the idea",00:33:52.090,00:33:59.020
to use a contradiction.,00:33:59.020,00:34:01.510
"Suppose there exists
a connected graph that",00:34:01.510,00:34:04.810
has no spanning tree.,00:34:04.810,00:34:06.450
So how would we go ahead?,00:34:06.450,00:34:07.540
"So how can we prove that we
have a contradiction here?",00:34:15.850,00:34:21.644
"So the proof that we're
going to propose here",00:34:21.644,00:34:24.830
is by contradiction.,00:34:24.830,00:34:25.820
"That means that we're going
to assume the opposite.",00:34:33.320,00:34:35.620
"So assume that we have
a connected graph,",00:34:35.620,00:34:42.040
a connected graph G.,00:34:42.040,00:34:47.014
That has no spanning tree.,00:34:54.570,00:34:58.600
So how can we use this?,00:34:58.600,00:35:01.450
How could this be strange?,00:35:01.450,00:35:03.300
Or what can we do here?,00:35:03.300,00:35:05.520
"So one of the nice things
about trees over here is--",00:35:13.420,00:35:17.390
"so that maybe gives us some
insight is that if we have",00:35:17.390,00:35:22.970
"a tree-- well, it seems like
such a kind of spanning tree is",00:35:22.970,00:35:29.395
like--,00:35:29.395,00:35:31.739
"It's a solution to a
subgraph that is connected",00:35:32.238,00:35:36.000
with a minimum number of edges.,00:35:36.000,00:35:37.555
"Like if I have any other type
of subgraph-- for example,",00:35:40.140,00:35:46.970
"if it has cycles, I can always
remove an edge of course.",00:35:46.970,00:35:49.900
"So we know a subgraph of G that
touches all the different edges",00:35:49.900,00:36:00.260
"and has a cycle
can get shortened",00:36:00.260,00:36:04.980
"by eliminating one
edge of a cycle that's",00:36:04.980,00:36:08.240
within such as a subgraph.,00:36:08.240,00:36:09.370
So maybe we have an idea here.,00:36:09.370,00:36:11.910
And maybe we can use this.,00:36:11.910,00:36:14.340
"So maybe we can say, let's
set consider a graph T. So",00:36:14.340,00:36:23.370
"let T be a connected subgraph
of G, but with a property",00:36:23.370,00:36:30.730
"that it has a minimum
number of edges.",00:36:30.730,00:36:34.570
"So let this be a
connected subgraph of G.",00:36:34.570,00:36:41.790
"And we assume that it has the
same vertices of G of course.",00:36:41.790,00:36:47.290
"In addition, it has the smallest
number of edges possible.",00:36:55.050,00:37:00.200
So what do we know?,00:37:17.350,00:37:18.720
"Well, let's look at
our assumption here.",00:37:18.720,00:37:21.410
"We said that a connected
graph, G-- that's",00:37:21.410,00:37:25.070
"what we consider
here-- for which",00:37:25.070,00:37:28.140
there is no spanning tree.,00:37:28.140,00:37:29.379
So what do we know?,00:37:29.379,00:37:30.170
"We know that this
particular T over here",00:37:30.170,00:37:32.622
"can definitely not be a
spanning tree, because that's",00:37:32.622,00:37:34.830
what we assume here.,00:37:34.830,00:37:35.790
Can we use this?,00:37:39.890,00:37:42.920
So let's think about this.,00:37:42.920,00:37:44.230
"So if it is not a spanning
tree, then what must it have?",00:37:49.780,00:37:55.510
"So we already know that T
is a connected subgraph of G",00:37:55.510,00:38:01.380
"with the same vertices of
G. So the only difference",00:38:01.380,00:38:06.180
"between a spanning tree and T
is that the spanning tree is",00:38:06.180,00:38:11.035
"a tree, and T is not a tree.",00:38:11.035,00:38:15.550
"So therefor, T
must have a cycle.",00:38:15.550,00:38:17.870
"So we use our
assumption over here.",00:38:17.870,00:38:22.790
"We know that T is
not a spanning tree.",00:38:22.790,00:38:27.730
"And now we can conclude
that it must have a cycle.",00:38:27.730,00:38:31.060
"So now we can start
thinking about this cycle.",00:38:36.960,00:38:42.530
And let's feel--,00:38:42.530,00:38:44.820
What can we do here?,00:38:46.540,00:38:47.830
"So we constructed T
as the subgraph that",00:38:47.830,00:38:52.445
"has the minimum number
of edges possible.",00:38:52.445,00:38:55.730
"So now if you have a
cycle, the whole idea",00:38:55.730,00:38:57.480
"is that we're going to delete
one of the edges of the cycle.",00:38:57.480,00:39:01.750
"And if you do that, we will
be able to construct a smaller",00:39:01.750,00:39:06.710
"subgraph T, essentially, with
a smaller number of edges.",00:39:06.710,00:39:11.420
"And that contradicts this
particular statement over here.",00:39:11.420,00:39:15.370
"So that's sort of
how we go ahead.",00:39:15.370,00:39:17.900
"So if it has a cycle,
let's write it out.",00:39:17.900,00:39:21.370
"For example, here we
have a cycle like this.",00:39:21.370,00:39:26.195
"Well, let's prove that if
we remove one of the cycle,",00:39:28.870,00:39:36.820
"that we still have a
connected subgraph.",00:39:36.820,00:39:41.280
"So the whole graph T
is much bigger, right?",00:39:41.280,00:39:44.180
"It has lots of
connections and so on.",00:39:44.180,00:39:49.480
"Suppose we will remove this
particular edge over here.",00:39:49.480,00:39:53.470
So we remove this one.,00:39:53.470,00:39:55.100
"Do we still have a
connected subgraph of G",00:39:57.650,00:40:03.060
"that covers all
the vertices of G?",00:40:03.060,00:40:06.060
"Well, of course it cover
all the vertices of G",00:40:06.060,00:40:08.010
"because we only removed
an edge over here.",00:40:08.010,00:40:09.980
So that's fine.,00:40:09.980,00:40:11.630
"All these parts are still
connected to the rest.",00:40:11.630,00:40:13.900
"If you can show that it is
connected, then well we just--",00:40:16.910,00:40:23.080
"well, we removed one edge.",00:40:23.080,00:40:24.380
"So we actually created
this smaller graph.",00:40:24.380,00:40:27.210
And then we get contradiction.,00:40:27.210,00:40:28.510
"And then we're done
with our proof.",00:40:28.510,00:40:30.800
"So let's see whether we
can prove that if we remove",00:40:30.800,00:40:35.330
"this particular edge
over here, that we still",00:40:35.330,00:40:37.350
have a connected subgraph.,00:40:37.350,00:40:39.110
So how can we do this?,00:40:39.110,00:40:40.055
"Well, let's take-- so the
first case would be if a vertex",00:40:42.760,00:40:51.382
x is connected to y.,00:40:51.382,00:40:56.020
"So I want to take any
pair x, y of vertices.",00:40:56.020,00:41:00.000
"And suppose that the path
that connects x and y",00:41:00.000,00:41:04.210
"does not contain this particular
edge e that I remove here.",00:41:04.210,00:41:09.030
"So suppose this
does not contain e.",00:41:09.030,00:41:18.000
"So I look at the graph
T. I Know T is connected.",00:41:18.000,00:41:22.770
"So I take a pair of
vertices x and y.",00:41:22.770,00:41:25.110
"I know there is a path
between x and y in T.",00:41:25.110,00:41:31.020
"If this path does not
contain the edge e,",00:41:31.020,00:41:35.360
"then I know that the same path
still exists in the same graph",00:41:35.360,00:41:39.410
"where I've removed
this particular edge.",00:41:39.410,00:41:41.620
"So that's great, right?",00:41:41.620,00:41:43.960
"I have shown that
x and y are still",00:41:43.960,00:41:46.110
"connected in the new graph
where I've removed this e.",00:41:46.110,00:41:51.250
"So now let's look
at another case.",00:41:51.250,00:41:52.870
"For example, x is over here.",00:41:52.870,00:41:56.440
"And it is connected all
the way through here",00:41:56.440,00:42:01.500
"over this particular edge all
the way to, say, y over here.",00:42:01.500,00:42:06.770
So this is case number two.,00:42:06.770,00:42:08.360
"Well, are x ad y
still connected?",00:42:15.720,00:42:19.660
"Yes they are, right?",00:42:19.660,00:42:20.650
"Because I have removed
e from a cycle.",00:42:20.650,00:42:25.610
"So I can still go into the
other direction of the cycle",00:42:25.610,00:42:30.400
and connect back towards y.,00:42:30.400,00:42:34.540
"So what we see here is that
x can go all the way to here.",00:42:34.540,00:42:38.710
"But it can still go
over the cycle back",00:42:38.710,00:42:41.110
"to here, and then to y.",00:42:41.110,00:42:45.090
So we are still connected.,00:42:45.090,00:42:48.410
"So this shows that
in both of the cases,",00:42:48.410,00:42:51.120
"for any pair of vertices,
even after removal of e,",00:42:51.120,00:42:55.260
"the graph T minus this
edge e is still connected.",00:42:55.260,00:42:59.050
So let's write this out.,00:43:01.650,00:43:02.990
"So all vertices in G
are still connected",00:43:02.990,00:43:20.540
after removing e from T.,00:43:20.540,00:43:31.150
So now we are done.,00:43:31.150,00:43:32.730
So what was that again?,00:43:32.730,00:43:35.320
"We now constructed
a smaller graph--",00:43:35.320,00:43:37.290
"smaller in the sense that it has
one less edge-- that is still",00:43:37.290,00:43:42.540
"connected, and with
the same vertices as G.",00:43:42.540,00:43:46.890
"But I assumed that T
was already the smallest",00:43:46.890,00:43:49.470
"such graph, such subgraph.",00:43:49.470,00:43:52.450
So we have a contradiction.,00:43:52.450,00:43:54.370
So what does this mean?,00:43:54.370,00:43:56.190
"This means that our original
assumption that we have over",00:43:56.190,00:43:58.870
"here cannot be true because
we started off with this",00:43:58.870,00:44:03.170
assumption.,00:44:03.170,00:44:04.530
"Because of this, we could
start to construct this.",00:44:04.530,00:44:07.460
"And then you could derive
this whole argumentation.",00:44:07.460,00:44:11.705
"And in the end, we
get a contradiction.",00:44:11.705,00:44:13.330
"So our original
assumption is wrong.",00:44:13.330,00:44:15.750
"So actually, this
is not possible.",00:44:15.750,00:44:20.040
"There does not exist a connected
graph G that has no ST.",00:44:20.040,00:44:23.760
So the theorem is true.,00:44:23.760,00:44:27.120
So this is an important theorem.,00:44:27.120,00:44:30.590
"So now we can start talking
about weighted minimum spanning",00:44:30.590,00:44:34.416
trees.,00:44:34.416,00:44:34.915
"So let's use this picture over
here and assign some weights",00:44:40.620,00:44:48.020
to this graph.,00:44:48.020,00:44:49.260
"So for example, we have 1,
2, 2, 3, 3, 3, a 1 over here,",00:44:52.000,00:45:08.800
"another 1, 1, 4, and 7.",00:45:08.800,00:45:15.130
"And let's construct
a spanning tree.",00:45:15.130,00:45:20.950
"So let me give an
example over here.",00:45:20.950,00:45:23.110
"Actually, this is an example
that we have right her",00:45:23.110,00:45:25.980
in the thick lines in green.,00:45:25.980,00:45:29.580
"So what is the weight
of the spanning tree",00:45:29.580,00:45:32.430
that we have here?,00:45:32.430,00:45:33.580
"So we simply add the
weights of all the edges.",00:45:33.580,00:45:35.920
"So we have 7, 3.",00:45:35.920,00:45:38.020
That makes 10.,00:45:38.020,00:45:38.960
"11, 14, another
2, 16, 17, 18, 19.",00:45:38.960,00:45:44.800
"So the weight of this
particular spanning tree is 19.",00:45:44.800,00:45:53.650
"So now the problem
is-- and that's",00:45:53.650,00:45:55.700
"the rest of the
lecture-- how can you",00:45:55.700,00:45:57.970
"construct a minimum
weight spanning",00:45:57.970,00:45:59.790
"tree, one that has the
minimum weight possible?",00:45:59.790,00:46:05.870
So we see another example.,00:46:05.870,00:46:09.380
"So could I swap
some edges around",00:46:09.380,00:46:11.280
"or something like that such
that I can get a lesser weight?",00:46:11.280,00:46:15.560
"So for example, over here,
I have-- for example,",00:46:15.560,00:46:20.940
"this node over here is connected
by an edge that has weight 3.",00:46:20.940,00:46:27.290
"But I could also
have connected it",00:46:27.290,00:46:29.590
"to this particular one over
here, which is only weight 1.",00:46:29.590,00:46:33.530
"If I do this, I actually improve
the spanning tree construction.",00:46:33.530,00:46:39.220
"So I will get something
that looks like--",00:46:39.220,00:46:44.035
"Let's see-- that
looks like this.",00:46:47.480,00:46:51.095
And now we replaced 3 by 1.,00:46:54.980,00:46:58.590
So it gets 17.,00:46:58.590,00:47:02.260
"So can we do anything
less than this?",00:47:02.260,00:47:06.060
"That's maybe-- it's
still a tree, right?",00:47:06.060,00:47:08.580
Because there's no cycle.,00:47:08.580,00:47:09.850
"Here we have this, this,
this, this part over here.",00:47:09.850,00:47:14.300
"If you want to have
connected subgraph,",00:47:14.300,00:47:16.230
I always need the 7 in here.,00:47:16.230,00:47:18.040
"Well, it seems like you
cannot really replace anything",00:47:21.490,00:47:25.170
by something cheaper.,00:47:25.170,00:47:27.020
"Like any edge in here seems
to be pretty necessary.",00:47:27.020,00:47:34.467
"Of course, what I could
do is I could create",00:47:34.467,00:47:36.300
other minimum spanning trees.,00:47:36.300,00:47:38.000
"So actually it turns out that
17 is the minimum weight.",00:47:38.000,00:47:41.060
"For example, I could,
instead of this edge,",00:47:41.060,00:47:43.640
I could use this edge.,00:47:43.640,00:47:45.270
That's another solution.,00:47:45.270,00:47:46.930
"Or instead of this edge,
I could use this edge.",00:47:46.930,00:47:50.070
"So how do we construct such a
minimum weight spanning tree?",00:47:57.960,00:48:02.080
"Can we somehow find an
algorithm that creates this?",00:48:02.080,00:48:06.330
"And that's the big
problem of today.",00:48:06.330,00:48:09.220
"So let me write out
one spanning tree",00:48:09.220,00:48:11.860
"that I will use for
the rest of this class.",00:48:11.860,00:48:16.890
"And maybe I will use a
little bit different color.",00:48:16.890,00:48:23.604
Let's use red over here.,00:48:33.930,00:48:36.720
I hope this is visible.,00:48:39.892,00:48:40.850
"So we have red, this
one, and this one,",00:48:43.280,00:48:49.828
"and this one, and this
one, and this one.",00:48:49.828,00:48:54.300
"That's going to
be-- this is going",00:48:54.300,00:48:56.480
"to be the spanning tree
that I'm going to look at.",00:48:56.480,00:48:59.440
This is also weight 17.,00:48:59.440,00:49:00.730
"So let's first define what a
minimum weight spanning tree",00:49:08.750,00:49:11.780
"is, just to be very precise.",00:49:11.780,00:49:15.180
"And then let's
have an algorithm.",00:49:15.180,00:49:17.610
"Maybe you have already ideas
of how this could be done.",00:49:17.610,00:49:22.790
"It turns out actually
that if you just",00:49:22.790,00:49:24.610
"start with a greedy
approach, you just",00:49:24.610,00:49:26.890
"start to add sort of through
the edges of minimum weight,",00:49:26.890,00:49:31.420
"that you can still add
without creating any cycles.",00:49:31.420,00:49:36.630
"You will get an
algorithm that is",00:49:36.630,00:49:38.300
going to do the trick for you.,00:49:38.300,00:49:41.030
So that's kind of surprising.,00:49:41.030,00:49:43.830
"So let's talk about
the definition.",00:49:43.830,00:49:46.555
"So the minimum spanning tree
of an edge weighted graph",00:49:50.560,00:50:01.830
is defined as--,00:50:01.830,00:50:06.030
"It's defined as the
spanning tree of G such",00:50:12.410,00:50:17.270
"that it has the smallest
possible sum of edge weights.",00:50:17.270,00:50:31.850
"Well the algorithm
that I'm thinking about",00:50:40.290,00:50:42.810
here is very straightforward.,00:50:42.810,00:50:46.530
"Actually I'll use
this blackboard",00:50:46.530,00:50:49.610
"because this algorithm
will be the focus",00:50:49.610,00:50:52.160
of the rest of the lecture.,00:50:52.160,00:50:53.930
So what's the algorithm?,00:51:08.820,00:51:09.870
"We actually grow a
subgraph step by step.",00:51:13.950,00:51:20.430
"So one edge at a time
such that at each step",00:51:20.430,00:51:35.360
"we want to add the
minimum weight edge that",00:51:35.360,00:51:55.850
keeps the subgraph acyclic.,00:51:55.850,00:51:57.900
So this is our algorithm.,00:52:13.320,00:52:14.940
"Let's have a look how this
works in this particular graph",00:52:14.940,00:52:18.010
over here.,00:52:18.010,00:52:18.733
"So suppose I would
start off with-- well,",00:52:24.660,00:52:28.530
if I start with this algorithm.,00:52:28.530,00:52:31.080
"I take, say, any
minimum weight edge.",00:52:31.080,00:52:34.340
Say I take this particular one.,00:52:34.340,00:52:36.120
"So this could be my
first edge that I choose.",00:52:36.120,00:52:38.160
"Then I may want to choose
another minimum weight",00:52:40.710,00:52:43.980
"edge such that I do
not create a cycle.",00:52:43.980,00:52:47.199
"Well, which one could I choose?",00:52:47.199,00:52:48.490
I could choose this one.,00:52:48.490,00:52:49.770
I could also choose this one.,00:52:49.770,00:52:52.494
"With this one, I could
choose this part.",00:52:52.494,00:52:54.160
"With this one, I could
choose that part.",00:52:54.160,00:52:55.826
I could also choose this one.,00:52:55.826,00:52:57.430
"So let's choose
this one actually.",00:52:57.430,00:53:00.780
"This would be our second
step and our second edge",00:53:00.780,00:53:04.540
that we select in our algorithm.,00:53:04.540,00:53:06.490
There are two disjoint edges.,00:53:06.490,00:53:08.130
So there's definitely no graph.,00:53:08.130,00:53:09.820
"Well, maybe now
our third step, I",00:53:12.600,00:53:15.810
"can choose one of these edges,
which also has just weight",00:53:15.810,00:53:21.390
"1, which is minimum weight.",00:53:21.390,00:53:23.030
"So this could be my
third possibility.",00:53:23.030,00:53:25.323
"Then what's the
fourth possibility?",00:53:27.960,00:53:29.570
"Well, I have to choose
one of those actually.",00:53:29.570,00:53:35.890
"I cannot choose
this weight 1 edge?",00:53:35.890,00:53:40.350
Why not?,00:53:40.350,00:53:40.850
"Because that would
create a cycle.",00:53:40.850,00:53:43.400
"So I'm not allowed to
choose this one anymore.",00:53:43.400,00:53:45.520
So I choose one of these two.,00:53:45.520,00:53:47.340
"So for example, I choose
this one over here.",00:53:47.340,00:53:50.860
"This is the fourth edge that
I add to the whole picture.",00:53:50.860,00:53:55.410
So note that in the meantime.,00:53:55.410,00:53:57.200
"I have two disconnected
components.",00:53:57.200,00:54:00.370
"One other here, which is this
arc, and another arc over here.",00:54:00.370,00:54:07.300
"So which edge do I attach
now in the algorithm?",00:54:07.300,00:54:11.860
"Well, I can still add
this minimum weight edge",00:54:11.860,00:54:15.050
"over here of weight two, because
it does not create any cycle.",00:54:15.050,00:54:20.140
"So this would be
the fifth wonder",00:54:20.140,00:54:22.860
that I add to the whole picture.,00:54:22.860,00:54:25.500
"Well, now I can choose
either one of those.",00:54:25.500,00:54:28.750
"So for example, this
would be my sixth step.",00:54:28.750,00:54:31.310
"And then finally, I can
choose none of these",00:54:31.310,00:54:35.420
"because those would
create cycles.",00:54:35.420,00:54:37.410
But I can choose this one.,00:54:37.410,00:54:39.350
"So this is going to be
the seventh one that I",00:54:39.350,00:54:42.990
"add to the whole graph
that I construct here",00:54:42.990,00:54:47.270
and grow in this algorithm.,00:54:47.270,00:54:49.060
"It turns out that this algorithm
actually creates for you",00:54:49.060,00:54:51.510
a minimum spanning tree.,00:54:51.510,00:54:53.360
"And the proof is
much more complex",00:54:53.360,00:54:55.700
than what you have seen before.,00:54:55.700,00:54:58.120
"So that's what we're
going to do right now.",00:54:58.120,00:55:00.970
"So when we think
about this algorithm,",00:55:03.650,00:55:06.050
"then somehow I want to guarantee
that at every single step,",00:55:06.050,00:55:10.220
"I will be able to grow into
a minimum spanning tree.",00:55:10.220,00:55:14.090
"And that's the basic
intuition that we have.",00:55:14.090,00:55:18.090
"And that's the lemma that
we want to prove first.",00:55:18.090,00:55:21.520
"So formalizing, we
get the following.",00:55:21.520,00:55:29.227
"We want to prove the
following statement.",00:55:29.227,00:55:30.935
"So the lemma that will help us
is let S be the set of edges",00:55:39.040,00:55:46.870
"that I have been selecting
up to now in the algorithm.",00:55:46.870,00:55:53.100
"So let S consist, for
example, of the first m edges.",00:55:53.100,00:56:00.175
"What we want to show
is that we can still",00:56:10.250,00:56:17.760
"extend this set of edges
into a minimum spanning tree.",00:56:17.760,00:56:20.960
"We can still grow
within the algorithm",00:56:20.960,00:56:23.190
into a minimum spanning tree.,00:56:23.190,00:56:24.950
That is what you want to show.,00:56:24.950,00:56:28.280
"So we want to show that their
exists a minimum spanning tree",00:56:28.280,00:56:34.300
"T that has the vertex
set V and an edge set E.",00:56:34.300,00:56:41.942
"So this is the minimum
spanning tree for the graph G",00:56:43.270,00:56:46.220
"such that S is actually
a subset of the edges",00:56:46.220,00:56:57.950
in this minimum spanning tree.,00:56:57.950,00:56:59.200
"So this is a nice
mathematical formulation",00:56:59.200,00:57:02.780
"that really precisely
states that we can still",00:57:02.780,00:57:08.836
"keep on growing into a
minimum spanning tree.",00:57:08.836,00:57:10.710
"So how would this lemma help
us in proving the theorem",00:57:10.710,00:57:13.560
that we want to show?,00:57:13.560,00:57:16.980
"Actually, where is the theorem?",00:57:16.980,00:57:20.110
"I did not write down
the theorem so far.",00:57:20.110,00:57:23.080
I can put this over here.,00:57:23.080,00:57:25.180
"So the theorem
that's want to show",00:57:25.180,00:57:26.910
"is that for any connected
weighted graph G,",00:57:26.910,00:57:43.990
"the algorithm creates a
minimum spanning tree.",00:57:43.990,00:57:46.180
"The algorithm produces
a minimum spanning tree.",00:57:51.990,00:57:59.960
So how can we prove his theorem?,00:57:59.960,00:58:02.580
"Suppose we know that
this lemma is true,",00:58:02.580,00:58:04.840
which we will prove later.,00:58:04.840,00:58:07.050
"Then how do we know
that this theorem holds?",00:58:07.050,00:58:10.010
"Actually, I'm wiping out this
particular theorem over here.",00:58:16.020,00:58:18.630
We will use this in a moment.,00:58:18.630,00:58:20.530
"So we know that every connected
graph has a spanning tree.",00:58:20.530,00:58:23.990
We already know that.,00:58:23.990,00:58:26.740
"But now we want to
show that we can even",00:58:26.740,00:58:28.880
"construct a minimum spanning
tree for a weighted graph.",00:58:28.880,00:58:31.480
So how are we going ahead?,00:58:34.070,00:58:36.140
"The proof of the
theorem is as follows.",00:58:38.850,00:58:45.820
"I will suppose that
the number of edges--",00:58:45.820,00:58:47.940
"the number of vertices--
is actually equal to n.",00:58:47.940,00:58:52.320
"And if we want to show that we
get to a minimum spanning tree,",00:58:52.320,00:58:57.750
"we want to first of all
show that the algorithm",00:58:57.750,00:59:00.820
"is able to choose at least
n minus 1 edges, right?",00:59:00.820,00:59:05.840
"Because a tree has
n minus 1 edges.",00:59:05.840,00:59:08.100
We have shown this before.,00:59:08.100,00:59:09.395
"The algorithm should
not get stuck.",00:59:13.220,00:59:15.030
So let's first prove that.,00:59:15.030,00:59:17.280
"So suppose I have chosen
less than n minus 1 edges.",00:59:17.280,00:59:23.160
"So suppose we have less
than n minus 1 edges picked.",00:59:26.310,00:59:31.920
Well then what do we know?,00:59:31.920,00:59:35.220
"Well, there exists as
edge in E minus S--",00:59:35.220,00:59:44.460
"well, let me first
write it out--",00:59:44.460,00:59:48.510
"that can be added
without creating a cycle.",00:59:48.510,00:59:58.440
So why is this?,01:00:02.120,01:00:03.760
"Well, I know that
E is the edge set",01:00:03.760,01:00:08.220
of my minimum spanning tree.,01:00:08.220,01:00:10.760
"I know that S is a part of--
is a subset of all the edges.",01:00:10.760,01:00:18.390
"I know that a minimum
spanning tree is a tree.",01:00:18.390,01:00:21.490
It's a tree on n vertices.,01:00:21.490,01:00:24.570
"We know that's a tree on n
vertices has n minus 1 edges.",01:00:24.570,01:00:29.870
"I know that less than n minus 1
edges have been chosen so far.",01:00:29.870,01:00:35.070
"So that means that S has
less than n minus 1 edges.",01:00:35.070,01:00:40.720
"E has successfully
n minus 1 edges.",01:00:40.720,01:00:42.650
"So there's at least one
edge that is contained,",01:00:42.650,01:00:45.915
"that it is an element
in E, but not in S.",01:00:45.915,01:00:52.345
"And for that
particular edge-- well,",01:00:52.345,01:00:55.610
"since it's part of
this tree, together",01:00:55.610,01:00:58.390
"with S, which is also part of
all the edges within the tree--",01:00:58.390,01:01:05.340
"well, we know that that
edge, for that reason,",01:01:05.340,01:01:08.770
will not create a cycle.,01:01:08.770,01:01:11.990
"Because otherwise, the
original would have a cycle.",01:01:11.990,01:01:14.830
"So we know that the
algorithm can always",01:01:17.690,01:01:20.340
"select an edge such that's
no cycle is created.",01:01:20.340,01:01:25.300
"And that means that we can
keep on going in the algorithm",01:01:25.300,01:01:28.960
"until at least n minus
1 edges are selected.",01:01:28.960,01:01:33.410
"So what happens if we
have n minus 1 edges?",01:01:33.410,01:01:36.695
"So once n minus 1
edges have been chosen,",01:01:40.020,01:01:49.960
"well, then S has
exactly n minus 1 edges.",01:01:49.960,01:01:54.500
"E has exactly n minus 1
edges, because it's a tree.",01:01:54.500,01:01:58.450
They are subsets of one another.,01:01:58.450,01:01:59.930
"So they must be
equal to one another.",01:01:59.930,01:02:02.330
"So essentially what
we have here is",01:02:02.330,01:02:04.160
"that S exactly defines
the minimum spanning tree",01:02:04.160,01:02:10.040
that we are looking for.,01:02:10.040,01:02:11.730
"So the algorithm
at the very end,",01:02:11.730,01:02:15.880
"when it has chosen
n minus 1 edges,",01:02:15.880,01:02:18.010
"produces a minimum
spanning tree.",01:02:18.010,01:02:21.540
"So we know that S defines
the edges of a minimum weight",01:02:21.540,01:02:34.130
spanning tree.,01:02:34.130,01:02:35.970
"So if this lemma
really holds true,",01:02:35.970,01:02:38.610
then this theorem can be shown.,01:02:38.610,01:02:41.226
"So now let's have a
look at this lemma.",01:02:41.226,01:02:42.850
"And we're going to use
that picture over there",01:02:42.850,01:02:44.830
to see how we can prove this.,01:02:44.830,01:02:47.610
So this is a little bit tricky.,01:02:47.610,01:02:51.610
"And the way to go about this
is actually to use induction.",01:02:51.610,01:03:00.340
"So let's check see whether
we can do this together.",01:03:00.340,01:03:03.640
"So the proof of the
lemma is as follows.",01:03:11.800,01:03:13.740
We want to use induction.,01:03:20.620,01:03:23.940
"On what do you think we
are going to induct here?",01:03:23.940,01:03:27.160
"Well, we want to prove
this particular lemma,",01:03:27.160,01:03:29.560
"and we have this
particular variable m.",01:03:29.560,01:03:31.490
"So that seems to be a
good methods to continue.",01:03:31.490,01:03:34.790
So we'll use induction on m.,01:03:34.790,01:03:36.840
"Let's state the
induction hypothesis.",01:03:41.740,01:03:47.030
"Well, it's exactly the
same as in the lemma.",01:03:47.030,01:03:49.000
"So we say for all
G and for all sets",01:03:49.000,01:03:54.780
"S that consists of the
first m selected edges,",01:03:54.780,01:04:12.730
"there exists a minimum
spanning tree of G such",01:04:12.730,01:04:22.120
that S is a subset of E.,01:04:22.120,01:04:28.780
"So this is how
induction hypothesis.",01:04:28.780,01:04:31.020
"And as always, we start
with the base case.",01:04:31.020,01:04:34.720
"And the base case is
going to be pretty",01:04:34.720,01:04:36.980
"straightforward in
this particular case.",01:04:36.980,01:04:38.900
"We have to do a little
bit of work for it.",01:04:42.750,01:04:44.690
So let's see how that works.,01:04:44.690,01:04:46.660
So the base case is m equals 0.,01:04:46.660,01:04:50.620
"So let's reread this statement
where m is equal to 0.",01:04:50.620,01:04:54.880
"Well, if we have zero selected
edges, then S is the empty set.",01:04:54.880,01:05:03.780
"So I have to prove
that for all G,",01:05:03.780,01:05:05.900
"there exists a minimum
spanning tree such",01:05:05.900,01:05:09.240
"that the empty set is a subset
of E. Well, the empty set is",01:05:09.240,01:05:13.010
"always a subset of E, right?",01:05:13.010,01:05:14.691
So that's no problem.,01:05:14.691,01:05:15.565
"So what I need to proof
is that for all G,",01:05:18.370,01:05:20.570
"there exists a minimum
spanning tree of G.",01:05:20.570,01:05:25.780
"And this is where our
previous theorem comes in,",01:05:25.780,01:05:28.610
"because we showed
that for all graphs G,",01:05:28.610,01:05:32.010
there exists a spanning tree.,01:05:32.010,01:05:33.450
"And if there exists
a spanning tree,",01:05:33.450,01:05:34.950
"there exists a minimum
weight spanning tree.",01:05:34.950,01:05:38.540
So that's the base case.,01:05:38.540,01:05:39.660
"So m equals 0 implies that
S is equal to the empty set.",01:05:39.660,01:05:46.380
"So that means that
S is definitely",01:05:46.380,01:05:48.530
"a subset for any set of edges of
a minimum weight spanning tree.",01:05:48.530,01:05:58.420
"And now we're going to use our
theorem to show that there also",01:06:02.300,01:06:07.030
exists a minimum spanning tree.,01:06:07.030,01:06:08.570
"So this in itself is not
yet sufficient, right?",01:06:08.570,01:06:10.950
You see that.,01:06:10.950,01:06:13.970
"I know that if S
is the empty set,",01:06:13.970,01:06:17.450
"then I know that
this always holds.",01:06:17.450,01:06:19.120
"But the statement is
a little bit bigger.",01:06:19.120,01:06:21.230
"For all G, I still
need to prove there",01:06:21.230,01:06:23.989
exists a minimum spanning tree.,01:06:23.989,01:06:25.280
"And that's what our
previous theorem told us.",01:06:25.280,01:06:27.950
"So we'll now write
that part out.",01:06:27.950,01:06:29.800
So we have to base case.,01:06:29.800,01:06:31.090
Let's see.,01:06:35.130,01:06:36.130
"I think I will go and
prove this over here.",01:06:42.680,01:06:49.020
So let's look at the--,01:06:49.020,01:06:52.106
That's the inductive step.,01:06:53.840,01:06:55.850
"And then hopefully we can play
a little bit with this picture",01:06:55.850,01:06:59.750
up here to get some insight.,01:06:59.750,01:07:01.916
So how do we do this?,01:07:06.550,01:07:09.050
"Well, with an inductive
step, we start as usual.",01:07:09.050,01:07:13.480
We assume that P of m holds.,01:07:17.880,01:07:23.765
Now how do we go ahead?,01:07:26.390,01:07:27.880
"So I want to prove Pm plus
1, which is stated over here.",01:07:27.880,01:07:34.160
"So I want to consider
the set S that",01:07:34.160,01:07:38.150
"consists of the first n
plus 1 selected edges.",01:07:38.150,01:07:40.960
"So well, essentially
what I'm interested in",01:07:40.960,01:07:46.140
"is what happens in
the n plus 1 step.",01:07:46.140,01:07:49.940
"So let E denote the edge that
I added in the m plus 1 step.",01:07:49.940,01:08:03.484
"And let S be the first
m selected edges.",01:08:10.720,01:08:16.319
"And we know that we can
apply p of m for S, right?",01:08:16.319,01:08:19.500
"Because we assume this
is our inductive step.",01:08:19.500,01:08:22.960
"So we can apply
something for S. We",01:08:22.960,01:08:25.140
would like to show Pm plus 1.,01:08:25.140,01:08:27.554
"So we would like
to show something",01:08:27.554,01:08:28.970
for the union of those two.,01:08:28.970,01:08:30.710
So let me repeat that.,01:08:30.710,01:08:33.870
"Let S denote the first
m selected edges.",01:08:33.870,01:08:40.800
"So by our induction hypothesis,
we can-- well, let's apply it.",01:08:44.330,01:08:54.430
"We know that there
exists a minimum spanning",01:08:54.430,01:08:57.810
"tree such that S is a
subset of the edges.",01:08:57.810,01:09:01.700
"So let's just pick one
such minimum spanning tree.",01:09:01.700,01:09:06.050
"So let T star be such a
minimum spanning tree.",01:09:06.050,01:09:11.490
It has edges E star.,01:09:11.490,01:09:13.490
"And we know that S is
actually a subset of E star.",01:09:23.710,01:09:27.640
"Let's look at the
very first case.",01:09:34.890,01:09:37.507
"So what are the kind of cases
that we are interested in?",01:09:37.507,01:09:39.840
So let's think again.,01:09:39.840,01:09:41.700
What do we need to prove?,01:09:41.700,01:09:42.990
We need to prove Pn plus 1.,01:09:42.990,01:09:45.420
"So we need to prove something
about the union of S and E.",01:09:45.420,01:09:48.670
"We want to show that there is
a minimum spanning tree such",01:09:48.670,01:09:52.729
"that the edge set of this
minimum spanning tree",01:09:52.729,01:09:56.220
contains both S and also E.,01:09:56.220,01:10:01.190
"So what kind of cases
can we handle here?",01:10:01.190,01:10:05.100
"Well, what will be a
really good first case?",01:10:05.100,01:10:09.590
"The first case could be
that E is actually already",01:10:09.590,01:10:13.260
part of E star.,01:10:13.260,01:10:15.790
"Well, if that's true, then
of course, S together with E",01:10:15.790,01:10:20.980
is also a subset of E star.,01:10:20.980,01:10:24.700
"And that means that we are
done, in this particular case.",01:10:24.700,01:10:32.450
And why is this?,01:10:32.450,01:10:33.570
"Because this is an example of
a minimum spanning tree that",01:10:33.570,01:10:38.220
"contains both S and E.
So it contains the n",01:10:38.220,01:10:41.025
plus 1 first selected edges.,01:10:41.025,01:10:43.430
And so this is Pn plus 1.,01:10:43.430,01:10:45.830
"Now the next case is
the difficult part.",01:10:45.830,01:10:47.890
"OK, let's wipe
out-- actually, we",01:10:52.350,01:10:59.400
"do not really need the proof
of the theorem anymore.",01:10:59.400,01:11:03.150
"So let's take this
off the blackboard.",01:11:03.150,01:11:05.930
"So the way to do this
is to sort of see",01:11:12.910,01:11:18.910
"how we can use the tree, T
star, and somehow transform it",01:11:18.910,01:11:26.040
"into another tree for
this particular case",01:11:26.040,01:11:29.680
"where we assume that
E is not in E star.",01:11:29.680,01:11:33.565
"So let's have a look
at that graph up there.",01:11:39.950,01:11:44.070
Let me rewrite it a little bit.,01:11:44.070,01:11:45.730
"And let's look at what
happens in the algorithm",01:11:45.730,01:11:50.020
after two steps.,01:11:50.020,01:11:51.200
So I will redraw the graph.,01:11:51.200,01:11:54.980
"So we have, say, these edges.",01:11:54.980,01:12:03.920
This one-- let me see.,01:12:13.970,01:12:19.370
"I want to use some different
colors to make this as clear",01:12:19.370,01:12:24.100
as possible.,01:12:24.100,01:12:26.630
We have this one.,01:12:26.630,01:12:28.623
We have this one.,01:12:28.623,01:12:30.516
We have this one.,01:12:30.516,01:12:33.170
"And we also have
this one actually.",01:12:33.170,01:12:35.140
Sorry.,01:12:35.140,01:12:36.440
"All right, so let's define
the different edges.",01:12:36.440,01:12:41.740
"The straight ones
from the set S.",01:12:41.740,01:12:46.290
"So after two steps over there,
we have selected this edge",01:12:46.290,01:12:49.990
"first, and then this
edge was the second edge",01:12:49.990,01:12:52.630
"that we selected
in our algorithm.",01:12:52.630,01:12:55.150
"So these two together
form the set S.",01:12:55.150,01:12:59.860
So what is T star?,01:12:59.860,01:13:02.100
"T star could be, for
example, the spanning tree",01:13:02.100,01:13:05.270
"that contains both these
edges plus the dotted ones.",01:13:05.270,01:13:14.155
So let's have a look here.,01:13:16.770,01:13:18.300
"This is indeed a tree, right?",01:13:18.300,01:13:21.390
"And if we look into
this picture over here,",01:13:21.390,01:13:26.580
"you can see that the weight
of this particular tree is 17.",01:13:26.580,01:13:30.710
"It's also a minimum
weight spanning tree.",01:13:30.710,01:13:33.180
What is G?,01:13:35.890,01:13:37.240
"G is the complete graph and
contains not only these two",01:13:37.240,01:13:41.500
"types of edges, but also these
sort of more orange colored",01:13:41.500,01:13:46.245
ones.,01:13:46.245,01:13:46.744
"So this is so the
situation that we are in.",01:13:50.910,01:13:54.490
"Now in our algorithm,
we want to choose",01:13:54.490,01:13:58.870
this particular third edge.,01:13:58.870,01:14:02.350
"So this is going to be our
e, this particular edge.",01:14:02.350,01:14:09.140
"And as you can see, e
is not part of T star.",01:14:09.140,01:14:13.320
"It's not one of those
two kinds of edges.",01:14:13.320,01:14:16.190
"It's actually one
of the orange edges.",01:14:16.190,01:14:20.230
So what can we do here?,01:14:20.230,01:14:22.400
"Well, the idea is that we
want to recreate like a you",01:14:22.400,01:14:29.640
"tree in which we somehow
exchange e-- exchange one",01:14:29.640,01:14:35.530
"of the edges in T
star with e, and still",01:14:35.530,01:14:39.330
"sort of maintaining the
minimum spanning tree property.",01:14:39.330,01:14:42.740
So how can you prove this?,01:14:42.740,01:14:43.970
"The way to do this
is to figure out",01:14:52.590,01:14:57.190
"what the algorithm
teaches us about e,",01:14:57.190,01:15:00.610
"and also what the tree
property tells us.",01:15:00.610,01:15:04.771
"So let's combine
all our knowledge.",01:15:08.040,01:15:10.410
"So first of all, we
know that the algorithm,",01:15:10.410,01:15:13.470
"from its definition,
implies that as together",01:15:13.470,01:15:18.470
"with e, actually has no cycle.",01:15:18.470,01:15:24.370
"That's how we select
the n plus 1 edge.",01:15:24.370,01:15:28.750
"There's no-- all
selected edged together",01:15:28.750,01:15:32.710
should not contain a cycle.,01:15:32.710,01:15:34.020
"That's the definition
of the algorithm.",01:15:34.020,01:15:36.040
We know that T star is a tree.,01:15:36.040,01:15:39.430
"And this implies that if
you look at the graph that",01:15:39.430,01:15:45.750
"has the edges, has the
vertices V together",01:15:45.750,01:15:49.710
"with E star with edge e, then
this must contain a cycle.",01:15:49.710,01:15:56.250
"Now this property I will
not prove right now,",01:15:59.930,01:16:02.626
"but it is pretty
straightforward.",01:16:02.626,01:16:04.000
"It's a one line proof
actually in the book.",01:16:04.000,01:16:05.840
So you can look it up.,01:16:05.840,01:16:07.080
"So it simply states that
if you have a tree, if you",01:16:07.080,01:16:10.050
"add another edge, an edge that
is not contained in E star,",01:16:10.050,01:16:15.500
then we will create a cycle.,01:16:15.500,01:16:19.110
"So now we can combine these
two statements together",01:16:19.110,01:16:22.780
"and conclude that, well,
if S with e has no cycle,",01:16:22.780,01:16:30.500
"but E star with e has a cycle,
and S is contained in E star,",01:16:30.500,01:16:36.940
"well there's only
one possibility.",01:16:36.940,01:16:39.180
"And that is that this cycle
must have an edge, e prime, that",01:16:39.180,01:16:52.420
is in E star minus S.,01:16:52.420,01:16:56.210
"Because if it would
not have such an edge,",01:16:56.210,01:16:59.630
"then all the edges of the cycle
must be located in S-- in S",01:16:59.630,01:17:08.440
"together with E. But S
together with E has no cycle.",01:17:08.440,01:17:11.432
So that's not possible.,01:17:11.432,01:17:12.390
"So this cycle must
have and edge e",01:17:12.390,01:17:14.460
"prime that is outside
S, but still in E star.",01:17:14.460,01:17:18.850
So we can find one over here.,01:17:18.850,01:17:22.000
"e prime can be this
particular edge.",01:17:22.000,01:17:24.800
So e prime is in E star.,01:17:24.800,01:17:28.820
"But it is not already
selected in S.",01:17:28.820,01:17:33.980
"So now we are going
to do a trick.",01:17:33.980,01:17:36.085
"The idea is to
swap e and e prime.",01:17:38.830,01:17:43.560
So that's the main idea.,01:17:43.560,01:17:45.580
"So let's first write down what
we know about the weight of e",01:17:45.580,01:17:51.620
prime and e.,01:17:51.620,01:17:53.770
"So since the algorithm,
well, could have selected e",01:17:53.770,01:18:04.370
"or e prime-- it did
select e, right?",01:18:04.370,01:18:07.300
"But it could have
also selected e prime,",01:18:07.300,01:18:09.670
"because e prime does not
create a cycle with S.",01:18:09.670,01:18:15.150
That's what we have seen here.,01:18:15.150,01:18:18.760
"So this really implies
therefore that the weight of e",01:18:18.760,01:18:27.920
"is at most the
weight of e prime.",01:18:27.920,01:18:35.520
So why is this?,01:18:35.520,01:18:36.210
"Because the algorithm always
chooses the minimum weight.",01:18:36.210,01:18:39.540
"And it can choose between e
or e prime, but it chose e.",01:18:39.540,01:18:43.515
"So the weight of e must be less
than the weight of e prime.",01:18:43.515,01:18:47.320
So that's what we know also.,01:18:47.320,01:18:49.620
"So now let's swap
e and e prime in T.",01:18:49.620,01:18:54.030
"And then we're almost
done with this proof,",01:18:54.030,01:18:55.900
"because that will be the tree
of which we will prove that it",01:18:55.900,01:19:02.295
is a minimum spanning tree.,01:19:02.295,01:19:04.386
"So the key idea is to swap e and
e prime in T. How do we do it?",01:19:10.870,01:19:22.510
"Well, let T double
star be equal to V",01:19:22.510,01:19:27.390
"with the edge set
E double star where",01:19:27.390,01:19:32.080
"E double star is really equal
to, well, the original set E",01:19:32.080,01:19:38.530
star.,01:19:38.530,01:19:39.260
But we take out of this e prime.,01:19:39.260,01:19:43.000
"So this one is taken out of
the minimum spanning tree.",01:19:43.000,01:19:46.330
And we add e in here.,01:19:46.330,01:19:48.614
"Now we want to prove
that this particular T",01:19:52.310,01:19:54.440
"double star is a minimum
spanning tree that",01:19:54.440,01:19:57.100
fits our lemma.,01:19:57.100,01:19:59.810
So what do we know?,01:19:59.810,01:20:03.180
"We know that T double
star is acyclic.",01:20:03.180,01:20:05.366
And why is this?,01:20:10.500,01:20:12.030
"Well, we actually removed e
prime from the only cycle-- so",01:20:12.030,01:20:25.500
"look up here also-- the
only cycle in E star",01:20:25.500,01:20:33.000
together with e.,01:20:33.000,01:20:35.720
So it's acyclic.,01:20:35.720,01:20:39.110
T double star is also connected.,01:20:39.110,01:20:41.130
And why is that?,01:20:43.660,01:20:45.620
"Well, since e prime is
removed-- but it was on a cycle.",01:20:45.620,01:20:52.440
So it remains connected.,01:20:52.440,01:20:53.988
"And finally, we also know
that T double star actually",01:20:58.680,01:21:04.300
"contains all the vertices in
G. So all these three together",01:21:04.300,01:21:15.530
"with prove that T double
star is a spanning tree of G,",01:21:15.530,01:21:22.830
"because it's acyclic, connected,
contains all the vertices.",01:21:22.830,01:21:26.700
"Is it a minimum
weight spanning tree?",01:21:26.700,01:21:29.780
"Now we are really almost done,
because-- let me write it out",01:21:29.780,01:21:34.840
here.,01:21:34.840,01:21:35.980
"We know that the
weight of T double star",01:21:35.980,01:21:42.980
is at most the weight of T star.,01:21:42.980,01:21:48.270
Why is this?,01:21:48.270,01:21:49.210
"Well, we showed just
now that the weight of e",01:21:49.210,01:21:53.570
"is at most the
weight of e prime.",01:21:53.570,01:21:55.350
"So we have exchanged
e and e prime.",01:21:55.350,01:21:58.360
"So that means that the
weight of T double star",01:21:58.360,01:22:00.750
"is at most that of
the weight of T star.",01:22:00.750,01:22:04.110
"We also know that T star
is a minimum spanning tree.",01:22:04.110,01:22:12.750
"So if you combine
these two together,",01:22:12.750,01:22:17.600
"then we know that the weight of
T double star cannot get less",01:22:17.600,01:22:20.290
"than the minimum
weight possibility.",01:22:20.290,01:22:22.010
So it also has a minimum weight.,01:22:22.010,01:22:25.080
"So T double star is a
minimum spanning tree.",01:22:25.080,01:22:30.940
"So now we're done
because in this case,",01:22:30.940,01:22:33.250
"we have constructed
a T double star such",01:22:33.250,01:22:37.720
"that S together with E is
a subset of E double star.",01:22:37.720,01:22:44.720
"And that means that we have
shown that our induction",01:22:44.720,01:22:50.630
step is true.,01:22:50.630,01:22:52.110
"We have shown that
Pn plus 1 holds.",01:22:52.110,01:22:54.800
"So now we finally have figured
out that the lemma is true.",01:22:54.800,01:22:58.040
"And now we showed already how
to use the lemma in our proof",01:22:58.040,01:23:05.080
for this particular theorem.,01:23:05.080,01:23:07.570
"So this is the end
of this lecture.",01:23:07.570,01:23:11.030
"And tomorrow, you will actually
go again over this proof",01:23:11.030,01:23:14.620
because it's rather complex.,01:23:14.620,01:23:16.830
"And then hopefully you
really get into all",01:23:16.830,01:23:19.740
the different proof techniques.,01:23:19.740,01:23:21.110
OK.,01:23:21.110,01:23:21.610
Thank you.,01:23:21.610,01:23:23.510
